combination_df = expand.grid(unique(our_meta[, our_ct_col]), unique(our_meta[, other_ct_col]))
colnameS(our_meta)
colnames(our_meta)
our_ct_col = 'harmonized_celltypes'
other_ct_col = 'calderon_scn'
our_meta = our_object@meta.data
combination_df = expand.grid(unique(our_meta[, our_ct_col]), unique(our_meta[, other_ct_col]))
View(combination_df)
unique(our_meta[, our_ct_col])
View(our_meta)
library(Seurat)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "cross_study_comparison_wt13")
dir.create(TARGET_dir)
our_object = readRDS(file.path('results', ANALYSIS_VERSION, 'manual_annotation_wt13/manual_celltype_object4.rds'))
# load in Seroka data
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
Seroka_object = Seroka_object[, Seroka_object$dataset != 'stg12']
# load in Calderon data
Calderon_object = readRDS("accessory_data/continuum_drosophila_embryonic_development_RNA/processed_data/continuum_exploration/14-16_celltyped.rds")
label_map = read.csv("accessory_data/cross_study_harmonization/late_wt_stage13-16.csv")
add_harmonize_ct <- function(seurat_object, author = 'Peng', label_map) {
if(author == 'Peng') {
col_id = 'Our.Data'
seurat_ct_id = 'manual_celltypes'
} else if(author == 'Calderon') {
col_id = 'Calderon.et.al..2022'
seurat_ct_id = 'cell_type'
} else if(author == 'Seroka') {
col_id = 'Seroka.et.al..2022'
seurat_ct_id = 'cell_type'
}
sub_label_map = label_map[label_map[, col_id] != '', ]
rownames(sub_label_map) = sub_label_map$Unified.Label
seurat_object$harmonized_celltypes = NA
for(h_ct in rownames(sub_label_map)) {
orig_ct = sub_label_map[h_ct, col_id]
orig_ct = stringr::str_split(orig_ct, ";")[[1]]
orig_ct = orig_ct[orig_ct != '']
seurat_object@meta.data[seurat_object@meta.data[, seurat_ct_id] %in% orig_ct, 'harmonized_celltypes'] = h_ct
}
return(seurat_object)
}
# harmonize our data
our_object = add_harmonize_ct(our_object, author = 'Peng', label_map = label_map)
DimPlot(our_object, group.by = 'harmonized_celltypes', label = TRUE)
# harmonize seroka data
Seroka_object = add_harmonize_ct(Seroka_object, author = 'Seroka', label_map = label_map)
DimPlot(Seroka_object, group.by = 'harmonized_celltypes', label = TRUE)
Calderon_object = add_harmonize_ct(Calderon_object, author = 'Calderon', label_map = label_map)
DimPlot(Calderon_object, group.by = 'harmonized_celltypes', label = TRUE)
DimPlot(Calderon_object, group.by = 'cell_type', label = TRUE)
our_proportion_df = data.frame(cell_types = names(table(our_object@meta.data$harmonized_celltypes)),
number = as.vector(table(our_object@meta.data$harmonized_celltypes)),
data_type = 'our data')
our_proportion_df$proportion = our_proportion_df$number / sum(our_proportion_df$number)
zero_proportion_df = data.frame(cell_types = setdiff(unique(label_map$Unified.Label), unique(our_proportion_df$cell_types)),
number = 0,
data_type = 'our data',
proportion = 0)
our_proportion_df = rbind(our_proportion_df, zero_proportion_df)
Seroka_proportion_df = data.frame(cell_types = names(table(Seroka_object@meta.data$harmonized_celltypes)),
number = as.vector(table(Seroka_object@meta.data$harmonized_celltypes)),
data_type = 'Seroka et al, 2022')
Seroka_proportion_df$proportion = Seroka_proportion_df$number / sum(Seroka_proportion_df$number)
zero_proportion_df = data.frame(cell_types = setdiff(unique(label_map$Unified.Label), unique(Seroka_proportion_df$cell_types)),
number = 0,
data_type = 'Seroka et al, 2022',
proportion = 0)
Seroka_proportion_df = rbind(Seroka_proportion_df, zero_proportion_df)
Calderon_proportion_df = data.frame(cell_types = names(table(Calderon_object@meta.data$harmonized_celltypes)),
number = as.vector(table(Calderon_object@meta.data$harmonized_celltypes)),
data_type = 'Calderon et al, 2022')
Calderon_proportion_df$proportion = Calderon_proportion_df$number / sum(Calderon_proportion_df$number)
zero_proportion_df = data.frame(cell_types = setdiff(unique(label_map$Unified.Label), unique(Calderon_proportion_df$cell_types)),
number = 0,
data_type = 'Calderon et al, 2022',
proportion = 0)
Calderon_proportion_df = rbind(Calderon_proportion_df, zero_proportion_df)
total_plot_df = rbind(our_proportion_df, Seroka_proportion_df, Calderon_proportion_df)
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions")
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 14, height = 6)
saveRDS(total_plot_df, file = file.path(TARGET_dir, "stage_13_16_proportion.rds"))
p
##################################################
# run the python scripts in the seroka
SCN_classification = read.csv(file.path(TARGET_dir, 'Seroka_comparison_scn', 'SCN_classification.csv'), row.names = 1)
SCN_classification = SCN_classification[rownames(our_object@meta.data), ]
our_object@meta.data$seroka_scn = SCN_classification$SCN_class
calc_class_proportion <- function(our_object, our_ct_col, other_ct_col) {
our_meta = our_object@meta.data
combination_df = expand.grid(unique(our_meta[, our_ct_col]), unique(our_meta[, other_ct_col]))
colnames(combination_df) = c('our_ct', 'other_ct')
combination_df$class_proportion = NA
for(temp_index in rownames(combination_df)) {
our_ct = as.character(combination_df[temp_index, 'our_ct'])
other_ct = as.character(combination_df[temp_index, 'other_ct'])
sub_our_meta = our_meta[our_meta[, our_ct_col] == our_ct, ]
other_proportion_list = table(sub_our_meta$seroka_scn) / nrow(sub_our_meta)
if(other_ct %in% names(other_proportion_list) == FALSE) {
combination_df[temp_index, "class_proportion"] = 0
}
else {
combination_df[temp_index, "class_proportion"] = other_proportion_list[other_ct]
}
}
return(combination_df)
}
seroka_proportion = calc_class_proportion(our_object, our_ct_col = 'harmonized_celltypes', 'seroka_scn')
seroka_proportion$other_ct = as.vector(seroka_proportion$other_ct)
seroka_proportion[seroka_proportion$other_ct == 'rand', 'other_ct'] = 'Unknown (SCN rand)'
# check if all the cell types are in there
setdiff(c(unique(Seroka_object@meta.data$harmonized_celltypes), 'Unknown (SCN rand)'), unique(seroka_proportion$other_ct))
seroka_proportion$our_ct = factor(seroka_proportion$our_ct, levels=sort(as.vector(unique(seroka_proportion$our_ct))))
seroka_proportion$other_ct = factor(seroka_proportion$other_ct, levels=sort(as.vector(unique(seroka_proportion$other_ct))))
saveRDS(seroka_proportion, file = file.path(TARGET_dir, "seroka_proportion.rds"))
p = ggplot(seroka_proportion, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Our Cell Types") +
ylab("Seroka et al's Cell Types") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
ggtitle("Stage 13-16: SCN Classification Proportion (Seroka et al)")
p
ggsave(filename = file.path(TARGET_dir, 'Seroka_cell_proportion.png'), plot = p, width = 14, height = 6)
# pySCN the Calderon
dir.create(file.path(TARGET_dir, 'Calderon_comparison_scn'))
withr::with_dir(
file.path(TARGET_dir, 'Calderon_comparison_scn'),
{
raw_expTrain = Calderon_object@assays$RNA@counts
raw_stTrain = Calderon_object@meta.data
write(colnames(raw_expTrain), file = "raw_train_colnames.txt")
write(rownames(raw_expTrain), file = "raw_train_rownames.txt")
Matrix::writeMM(raw_expTrain, "raw_train_exp.txt")
write.csv(raw_stTrain, file = 'raw_meta_tab.csv')
}
)
# run the python scripts in the Calderon
SCN_classification = read.csv(file.path(TARGET_dir, 'Calderon_comparison_scn', 'SCN_classification.csv'), row.names = 1)
SCN_classification = SCN_classification[rownames(our_object@meta.data), ]
our_object@meta.data$calderon_scn = SCN_classification$SCN_class
calderon_proportion = calc_class_proportion(our_object, our_ct_col = 'harmonized_celltypes', 'calderon_scn')
calderon_proportion$other_ct = as.vector(calderon_proportion$other_ct)
calderon_proportion[calderon_proportion$other_ct == 'rand', 'other_ct'] = 'Unknown (SCN rand)'
# check if all the cell types are in there
setdiff(c(unique(Calderon_object@meta.data$harmonized_celltypes), 'Unknown (SCN rand)'), unique(calderon_proportion$other_ct))
# add in zero unknown (SCN rand)
zero_df = data.frame(our_ct = unique(calderon_proportion$our_ct),
other_ct = 'Unknown (SCN rand)',
class_proportion = 0)
calderon_proportion = rbind(calderon_proportion, zero_df)
calderon_proportion$our_ct = factor(calderon_proportion$our_ct, levels=sort(as.vector(unique(calderon_proportion$our_ct))))
calderon_proportion$other_ct = factor(calderon_proportion$other_ct, levels=sort(as.vector(unique(calderon_proportion$other_ct))))
saveRDS(calderon_proportion, file = file.path(TARGET_dir, "calderon_proportion.rds"))
p = ggplot(calderon_proportion, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Our Cell Types") +
ylab("Calderon et al's Cell Types") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
ggtitle("Stage 13-16: SCN Classification Proportion (Calderon et al)")
p
ggsave(filename = file.path(TARGET_dir, 'Calderon_cell_proportion.png'), plot = p, width = 14, height = 6)
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'cross_study_comparison_wt13')
dir.create(TARGET_dir, recursive = TRUE)
calderon_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/calderon_proportion.rds"))
p = ggplot(calderon_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types (Calderon et al)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Calderon et al")
ggsave(filename = file.path(TARGET_dir, 'Calderon_SCN_proportion.png'), plot = p, width = 14, height = 10)
seroka_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/seroka_proportion.rds"))
p = ggplot(seroka_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types (Seroka et al)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Seroka et al")
ggsave(filename = file.path(TARGET_dir, 'Seroka_SCN_proportion.png'), plot = p, width = 14, height = 10)
# this is to plot out cell type proportion
total_plot_df = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/stage_13_16_proportion.rds"))
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions")
p
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
table(Seroka_object@meta.data$dataset)
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
total_plot_df[total_plot_df$data_type == 'Calderon et al, 2022', 'data_type'] = 'Calderon et al (stage 14-16)'
total_plot_df[total_plot_df$data_type == 'Seroka et al, 2022', 'data_type'] = 'Seroka et al (stage 14-16)'
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions")
p
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions")
p
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions") +
theme(text = element_text(size = 18))
p
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'cross_study_comparison_wt13')
dir.create(TARGET_dir, recursive = TRUE)
calderon_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/calderon_proportion.rds"))
p = ggplot(calderon_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types (Calderon et al)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Calderon et al (stage 14-16)")
ggsave(filename = file.path(TARGET_dir, 'Calderon_SCN_proportion.png'), plot = p, width = 14, height = 10)
seroka_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/seroka_proportion.rds"))
p = ggplot(seroka_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types (Seroka et al)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Seroka et al (stage 14-16)")
ggsave(filename = file.path(TARGET_dir, 'Seroka_SCN_proportion.png'), plot = p, width = 14, height = 10)
# this is to plot out cell type proportion
total_plot_df = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/stage_13_16_proportion.rds"))
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
total_plot_df[total_plot_df$data_type == 'Calderon et al, 2022', 'data_type'] = 'Calderon et al (stage 14-16)'
total_plot_df[total_plot_df$data_type == 'Seroka et al, 2022', 'data_type'] = 'Seroka et al (stage 14-16)'
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions") +
theme(text = element_text(size = 18))
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 14, height = 6)
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'cross_study_comparison_wt13')
dir.create(TARGET_dir, recursive = TRUE)
calderon_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/calderon_proportion.rds"))
p = ggplot(calderon_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types from Calderon et al (stage 14-16)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Calderon et al")
ggsave(filename = file.path(TARGET_dir, 'Calderon_SCN_proportion.png'), plot = p, width = 14, height = 10)
seroka_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/seroka_proportion.rds"))
p = ggplot(seroka_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types from Seroka et al (stage 14-16)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Seroka et al")
ggsave(filename = file.path(TARGET_dir, 'Seroka_SCN_proportion.png'), plot = p, width = 14, height = 10)
# this is to plot out cell type proportion
total_plot_df = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/stage_13_16_proportion.rds"))
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
total_plot_df[total_plot_df$data_type == 'Calderon et al, 2022', 'data_type'] = 'Calderon et al (stage 14-16)'
total_plot_df[total_plot_df$data_type == 'Seroka et al, 2022', 'data_type'] = 'Seroka et al (stage 14-16)'
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions") +
theme(text = element_text(size = 18))
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 14, height = 6)
ggsave(filename = file.path(TARGET_dir, 'Seroka_SCN_proportion.png'), plot = p, width = 10, height = 14)
# this is to plot out cell type proportion
total_plot_df = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/stage_13_16_proportion.rds"))
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
total_plot_df[total_plot_df$data_type == 'Calderon et al, 2022', 'data_type'] = 'Calderon et al (stage 14-16)'
total_plot_df[total_plot_df$data_type == 'Seroka et al, 2022', 'data_type'] = 'Seroka et al (stage 14-16)'
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions") +
theme(text = element_text(size = 18))
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 6, height = 14)
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'cross_study_comparison_wt13')
dir.create(TARGET_dir, recursive = TRUE)
calderon_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/calderon_proportion.rds"))
p = ggplot(calderon_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types from Calderon et al (stage 14-16)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Calderon et al")
ggsave(filename = file.path(TARGET_dir, 'Calderon_SCN_proportion.png'), plot = p, width = 14, height = 10)
seroka_SCN_matrix = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/seroka_proportion.rds"))
p = ggplot(seroka_SCN_matrix, aes(our_ct, other_ct, fill= class_proportion)) +
geom_tile() +
xlab("Stage 13-16 Embryonic Cell Types") +
ylab("SCN Cell Types from Seroka et al (stage 14-16)") +
scale_fill_viridis(option = "D", discrete=FALSE) + scale_x_discrete(guide = guide_axis(angle = 45)) +
guides(fill=guide_legend(title="Percent Classified")) +
theme(text = element_text(size = 18)) +
ggtitle("Stage 13-16: SCN Classification Proportion using cell types from Seroka et al")
ggsave(filename = file.path(TARGET_dir, 'Seroka_SCN_proportion.png'), plot = p, width = 14, height = 10)
# this is to plot out cell type proportion
total_plot_df = readRDS(file.path('results', ANALYSIS_VERSION, "cross_study_comparison_wt13/stage_13_16_proportion.rds"))
total_plot_df[total_plot_df$data_type == 'our data', 'data_type'] = 'Stage 13-16 Embryonic Data'
total_plot_df[total_plot_df$data_type == 'Calderon et al, 2022', 'data_type'] = 'Calderon et al (stage 14-16)'
total_plot_df[total_plot_df$data_type == 'Seroka et al, 2022', 'data_type'] = 'Seroka et al (stage 14-16)'
p<-ggplot(data=total_plot_df, aes(x=reorder(cell_types, proportion), y=proportion, fill = data_type)) +
geom_bar(stat="identity", position=position_dodge()) + theme_bw() + coord_flip() +
ylab("Total Cell Proportion") +
xlab("Harmonized Cell Types") +
ggtitle("Stage 13-16 Cell Type Proportions") +
theme(text = element_text(size = 18))
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 6, height = 14)
ggsave(filename = file.path(TARGET_dir, 'comparison_cell_proportion.png'), plot = p, width = 10, height = 14)
object = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
FeaturePlot(object, features = 'Yet')
FeaturePlot(object, features = 'yet')
FeaturePlot(object, features = 'vasa')
library(ggplot2)
library(Seurat)
FeaturePlot(object, features = 'vasa')
FeaturePlot(object, features = 'fdy')
FeaturePlot(object, features = 'FDY')
FeaturePlot(object, features = 'Ppr-Y')
FeaturePlot(object, features = 'kl-2')
FeaturePlot(object, features = 'kl-3')
FeaturePlot(object, features = 'ks-2')
FeaturePlot(object, features = 'ks2')
FeaturePlot(object, features = 'Ks-2')
FeaturePlot(object, features = 'Bruce')
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_trachea')
TARGET_dir
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
View(rank_sum)
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_germ')
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == '1', ] = 'Unknown 1'
rank_sum[rank_sum$group == '3', ] = 'Unknown 2'
rank_sum[rank_sum$group == '5', ] = 'Early Germ Cells'
rank_sum[rank_sum$group == '6', ] = 'Middle Germ Cells 1'
rank_sum[rank_sum$group == '2', ] = 'Middle Germ Cells 2'
rank_sum[rank_sum$group == '4', ] = 'Late Germ Cells 1'
View(rank_sum)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == '1', ] = 'Unknown 1'
rank_sum[rank_sum$group == '3', ] = 'Unknown 2'
rank_sum[rank_sum$group == '5', ] = 'Early Germ Cells'
rank_sum[rank_sum$group == '6', ] = 'Middle Germ Cells 1'
rank_sum[rank_sum$group == '2', ] = 'Middle Germ Cells 2'
rank_sum[rank_sum$group == '4', ] = 'Late Germ Cells 1'
View(rank_sum)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == '1', 'group'] = 'Unknown 1'
rank_sum[rank_sum$group == '3', 'group'] = 'Unknown 2'
rank_sum[rank_sum$group == '5', 'group'] = 'Early Germ Cells'
rank_sum[rank_sum$group == '6', 'group'] = 'Middle Germ Cells 1'
rank_sum[rank_sum$group == '2', 'group'] = 'Middle Germ Cells 2'
rank_sum[rank_sum$group == '4', 'group'] = 'Late Germ Cells 1'
View(rank_sum)
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_salivary_gland')
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == 2, 'group'] = "Earlier Salivary Gland Cells"
rank_sum[rank_sum$group == 1, 'group'] = "Later Salivary Gland Cells"
View(rank_sum)
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
library(Seurat)
library(monocle3)
library(presto)
library(pheatmap)
library(ggplot2)
library(tradeSeq)
set.seed(123)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland")
#########################################################
library(fgsea)
pathway_list = readRDS('accessory_data/GO_Biological_Processes_2018/GO_Biological_Process.rds')
rank_sum_test = read.csv(file.path(TARGET_dir, 'rank_sum_test.csv'), row.names = 1)
rank_sum_test = rank_sum_test[rank_sum_test$pct_in > 10 | rank_sum_test$pct_out > 10, ]
sub_rank_sum_test = rank_sum_test[rank_sum_test$group == 1, ]
ranks <- sub_rank_sum_test$logFC
names(ranks) <- sub_rank_sum_test$feature
fgseaRes <- fgsea(pathways = pathway_list,
stats = ranks,
minSize=10,
maxSize=500)
fgseaRes = data.frame(fgseaRes)
fgseaRes = apply(fgseaRes,2,as.character)
fgseaRes = as.data.frame(fgseaRes)
fgseaRes = fgseaRes[!is.na(fgseaRes$padj), ]
fgseaRes$NES = as.numeric(fgseaRes$NES)
fgseaRes = fgseaRes[fgseaRes$NES > 0, ]
write.csv(fgseaRes, file = file.path(TARGET_dir, 'late_gsea_results.csv'))
sub_rank_sum_test = rank_sum_test[rank_sum_test$group == 2, ]
ranks <- sub_rank_sum_test$logFC
names(ranks) <- sub_rank_sum_test$feature
fgseaRes <- fgsea(pathways = pathway_list,
stats = ranks,
minSize=10,
maxSize=500)
fgseaRes = data.frame(fgseaRes)
fgseaRes = apply(fgseaRes,2,as.character)
fgseaRes = as.data.frame(fgseaRes)
fgseaRes = fgseaRes[!is.na(fgseaRes$padj), ]
fgseaRes$NES = as.numeric(fgseaRes$NES)
fgseaRes = fgseaRes[fgseaRes$NES > 0, ]
write.csv(fgseaRes, file = file.path(TARGET_dir, 'early_gsea_results.csv'))
library(ggplot2)
