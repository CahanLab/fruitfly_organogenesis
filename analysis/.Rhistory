ggsave(file.path("Batch_UMAP.png"), plot = p, width = 10, height = 8)
p = DimPlot(wt_object, group.by = 'seurat_clusters', label = TRUE, label.size = 8) +
ggtitle("Stage 13 - 16: Seurat Clusters") +
xlim(c(-8, 12)) +
theme(text = element_text(size = 22), legend.text=element_text(size=22))
ggsave(file.path("clusters_UMAP.png"), plot = p, width = 10, height = 8)
})
# plot out the proportion of each cell type
withr::with_dir(TARGET_dir, {
proportion_df = data.frame("cell_types" = names(table(wt_object@meta.data$manual_celltypes)),
"number_cells" = as.vector(table(wt_object@meta.data$manual_celltypes)))
proportion_df$cell_proportion = proportion_df$number_cells / sum(proportion_df$number_cells)
p<-ggplot(data=proportion_df, aes(x=reorder(cell_types, cell_proportion), y=cell_proportion, fill = cell_types)) +
scale_fill_discrete(name = "Cell Types") +
geom_bar(stat="identity") + theme_bw() + coord_flip() +
ylab("Stage 13 - 16: Total Cell Proportion") +
xlab("Cell Types") +
theme(text = element_text(size = 24), legend.position="none")
ggsave(filename = file.path("cell_proportion_bar.png"), plot = p, width = 10, height = 10)
})
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
library(ggsignif)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_germ')
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == '1', 'group'] = 'Unknown 1'
rank_sum[rank_sum$group == '3', 'group'] = 'Unknown 2'
rank_sum[rank_sum$group == '5', 'group'] = 'Early Germ Cells'
rank_sum[rank_sum$group == '6', 'group'] = 'Interm. Germ Cells 1'
rank_sum[rank_sum$group == '2', 'group'] = 'Interm. Germ Cells 2'
rank_sum[rank_sum$group == '4', 'group'] = 'Late Germ Cells'
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "monocle3_no_batch_correct_object.rds"))
plot_cells(cds, genes = 'BigH1', cell_size = 1)
plot_cells(cds, genes = c("lncRNA:roX1", "lncRNA:roX2"), cell_size = 1, scale_to_range = FALSE, show_trajectory_graph = FALSE)
plot_cells(cds, genes = c("CG6701", "Pp2C1", 'ovo', 'otu', 'Sxl'), cell_size = 1, scale_to_range = FALSE, show_trajectory_graph = FALSE)
plot_cells(cds, genes = c("FDY"), cell_size = 1, scale_to_range = FALSE, show_trajectory_graph = FALSE)
trimws
# manually annotate stage 10-12 embryos
TARGET_dir = file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12")
object = readRDS(file.path("results", ANALYSIS_VERSION, "early_wt12_integrated/BDGP_automated_annotation_object.rds"))
manual_tab = read.csv(file.path(TARGET_dir, 'manualCellType_3.csv'))
object@meta.data$manual_celltypes = NULL
for(temp_cluster in unique(manual_tab$cluster)) {
object@meta.data[object@meta.data$seurat_clusters == temp_cluster, 'manual_celltypes'] = trimws(manual_tab[manual_tab$cluster == temp_cluster, 'annotation'])
}
View(manual_tab)
set.seed(123)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland")
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object3.rds"))
##########################
# TODO the below will be changed as time goes on
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "early_wt12_integrated/BDGP_automated_annotation_object.rds"))
sub_wt_early_object = subset(wt_early_object, subset = Integrated_tentativeCellType == 'salivary gland body primordium')
other_wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
other_wt_early_object$seurat_clusters
colnames(other_wt_early_object@meta.data)
table(other_wt_early_object$manual_celltypes)
other_sub_wt_early_object = subset(other_wt_early_object, subset = manual_celltypes == 'Salivary Gland')
unique(other_sub_wt_early_object$manual_celltypes)
unique(other_sub_wt_early_object$seurat_clusters)
unique(sub_wt_early_object$seurat_clusters)
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
sub_wt_early_object = subset(wt_early_object, subset = manual_celltypes == 'Salivary Gland')
sub_wt_early_object$experimental_condition = 'early'
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Salivary Gland")
sub_wt_late_object$experimental_condition = 'late'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'salivary_glands')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
set.seed(123)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Salivary Gland")
sub_wt_late_object$experimental_condition = 'late'
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
sub_wt_early_object = subset(wt_early_object, subset = manual_celltypes == 'Salivary Gland')
sub_wt_early_object$experimental_condition = 'early'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'salivary_glands')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
cds@metadata
cds@colData
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_salivary_gland')
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == 2, 'group'] = "Earlier Salivary Gland Cells"
rank_sum[rank_sum$group == 1, 'group'] = "Later Salivary Gland Cells"
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "monocle3_no_batch_correct_object.rds"))
##### making a function scale + smoothing expression profiles #####
#' @title make scaled and average expression pattern of genes across pseudotime
#' @description
#' make scaled and smoothed expression profile of target genes across pseudotime.
#' @param cds monocle3 object
#' @param target_genes genes of interest
#' @param bandwidth the bandwidth for ksmooth
#' @return scaled expression profile
plot_heatmap <- function(cds, target_genes, bandwidth = 3) {
norm_exp = monocle3::normalized_counts(cds)
norm_exp = as.matrix(norm_exp)
norm_exp = norm_exp[c(target_genes), ]
# this will change
#norm_exp = norm_exp[apply(norm_exp, MARGIN = 1, FUN = max) > 1, ]
pt = monocle3::pseudotime(cds)
pt = data.frame(pseudotime = pt)
plot_df = cbind(pt, t(norm_exp[, rownames(pt)]))
smoothed_df = data.frame()
for(gene in colnames(plot_df)) {
if(gene == 'pseudotime') {
next
}
else {
yy = ksmooth(plot_df[, 'pseudotime'], plot_df[, gene], kernel="normal", bandwidth = bandwidth, x.points=plot_df[, 'pseudotime'])
if(nrow(smoothed_df) == 0) {
smoothed_df = data.frame('pseudotime' = yy$x)
}
smoothed_df[, gene] = yy$y
}
}
smoothed_df$pseudotime = NULL
smoothed_df = t(smoothed_df)
scaled_exp = t(scale(t(smoothed_df)))
sorted_genes = names(sort(apply(scaled_exp, MARGIN = 1, FUN = which.max)))
scaled_exp = scaled_exp[sorted_genes, ]
return(scaled_exp)
}
###### plotting out dynamic gene heatmap ######
# plot out the Golgi Vesicle gene expression
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "monocle3_no_batch_correct_object.rds"))
term = 'Golgi vesicle transport (GO:0048193)'
GSEA_results = read.csv(file.path(TARGET_dir, "sig_early_GSEA_results.csv"), row.names = 1)
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
scaled_exp = plot_heatmap(cds, target_genes)
sorted_genes = names(sort(apply(scaled_exp, MARGIN = 1, FUN = which.max)))
no_tf_scaled = scaled_exp[sorted_genes[sorted_genes != 'CrebA'], ]
pheatmap(no_tf_scaled, cluster_cols = FALSE, cluster_rows = FALSE)
# plot out the Cytoplasmic translation
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "monocle3_no_batch_correct_object.rds"))
term = 'cytoplasmic translation (GO:0002181)'
GSEA_results = read.csv(file.path(TARGET_dir, "sig_late_GSEA_results.csv"), row.names = 1)
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
scaled_exp = plot_heatmap(cds, target_genes)
sorted_genes = names(sort(apply(scaled_exp, MARGIN = 1, FUN = which.max)))
no_tf_scaled = scaled_exp[sorted_genes[sorted_genes != 'rib'], ]
pheatmap(no_tf_scaled, cluster_cols = FALSE, cluster_rows = FALSE)
##### look at salivary gland specific genes #####
early_DE_genes = read.csv("results/v18/early_wt12_enrichment/Salivary Gland/markers_genes.csv", row.names = 1)
late_DE_genes = read.csv("results/v18/wt13_enrichment/Salivary Gland/markers_genes.csv", row.names = 1)
##### look at salivary gland specific genes #####
early_DE_genes = read.csv(file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Salivary Gland/markers_genes.csv"), row.names = 1)
late_DE_genes = read.csv(file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Salivary Gland/markers_genes.csv"), row.names = 1)
late_DE_genes = late_DE_genes[late_DE_genes$p_val_adj < 0.05 & late_DE_genes$avg_log2FC > 0, ]
early_DE_genes = early_DE_genes[early_DE_genes$p_val_adj < 0.05 & early_DE_genes$avg_log2FC > 0, ]
late_DE_genes$symbol = rownames(late_DE_genes)
early_DE_genes$symbol = rownames(early_DE_genes)
late_DE_genes$type = 'late'
early_DE_genes$type = 'early'
combined_DE_genes = rbind(late_DE_genes, early_DE_genes)
combined_DE_genes[combined_DE_genes$symbol %in% combined_DE_genes$symbol[duplicated(combined_DE_genes$symbol)], 'type'] =
paste0(combined_DE_genes[combined_DE_genes$symbol %in% combined_DE_genes$symbol[duplicated(combined_DE_genes$symbol)], 'type'], "_", "both")
sub_type_rank_sum = read.csv(file.path(TARGET_dir, 'DE_genes.csv'), row.names = 1)
sub_type_rank_sum = sub_type_rank_sum[sub_type_rank_sum$padj < 0.05, ]
early_sum_test = sub_type_rank_sum[sub_type_rank_sum$group == 'Earlier Salivary Gland Cells', ]
early_sum_test = early_sum_test[early_sum_test$feature %in% combined_DE_genes[combined_DE_genes$type == 'early', 'symbol'], ]
##### Plotting out the TFs #####
TF_tab = read.csv("accessory_data/Drosophila_TFs/all_candidates.csv", sep = '\t')
TF_tab = TF_tab[TF_tab$verdict_DNA_BD != "NO", ]
early_TFs = intersect(TF_tab$symbol, early_sum_test$feature)
late_TFs = intersect(TF_tab$symbol, late_sum_test$feature)
middle_sum_test = combined_DE_genes[grep("both", combined_DE_genes$type), ]
##### plot out the salivary gland specific genes in dynamic heatmap #####
heatmap_df = plot_heatmap(cds, early_sum_test$feature, bandwidth = 3)
pheatmap::pheatmap(heatmap_df, cluster_cols = FALSE, cluster_rows = FALSE)
##### plot out the salivary gland specific genes in dynamic heatmap #####
heatmap_df = plot_heatmap(cds, early_sum_test$feature, bandwidth = 3)
pheatmap::pheatmap(heatmap_df, cluster_cols = FALSE, cluster_rows = FALSE)
late_sum_test = sub_type_rank_sum[sub_type_rank_sum$group == 'Later Salivary Gland Cells', ]
late_sum_test = late_sum_test[late_sum_test$feature %in% combined_DE_genes[combined_DE_genes$type == 'late', 'symbol'], ]
##### Plotting out the TFs #####
# look at TFs
TF_tab = read.csv("accessory_data/Drosophila_TFs/all_candidates.csv", sep = '\t')
TF_tab = TF_tab[TF_tab$verdict_DNA_BD != "NO", ]
early_TFs = intersect(TF_tab$symbol, early_sum_test$feature)
late_TFs = intersect(TF_tab$symbol, late_sum_test$feature)
middle_sum_test = combined_DE_genes[grep("both", combined_DE_genes$type), ]
middle_TF = intersect(TF_tab$symbol, unique(middle_sum_test$symbol))
# this is for the dotplot
all_TFs = c(early_TFs, middle_TF, late_TFs)
cds@colData$cell_type = NA
cds@colData[clusters(cds) == 2, 'cell_type'] = "Early Salivary Gland Cells"
cds@colData[clusters(cds) == 1, 'cell_type'] = "Late Salivary Gland Cells"
meta_tab = cds@colData
norm_data = normalized_counts(cds)
diff_count = c()
for(TF in all_TFs) {
early_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Early Salivary Gland Cells', ])]
late_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Late Salivary Gland Cells', ])]
percent_early = sum(early_norm[TF, ] > 0) / ncol(early_norm)
percent_late = sum(late_norm[TF, ] > 0) / ncol(late_norm)
diff = abs(percent_early - percent_late)
diff_count = c(diff_count, percent_late)
}
names(diff_count) = all_TFs
sort(diff_count)
# dot plot
p = plot_genes_by_group(cds, markers = names(sort(diff_count)), norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Late Salivary Gland Cells', 'Early Salivary Gland Cells')) +
theme(text = element_text(size = 24))
p
# analysis of trachea cells
set.seed(123)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea")
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object3.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Trachea")
sub_wt_late_object$experimental_condition = 'late'
unique(sub_wt_late_object$seurat_clusters)
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Trachea")
sub_wt_late_object$experimental_condition = 'late'
unique(sub_wt_late_object$seurat_clusters)
##########################
# TODO the below will be changed as time goes on
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "early_wt12_integrated/BDGP_automated_annotation_object.rds"))
sub_wt_early_object = subset(wt_early_object, subset = Integrated_tentativeCellType == 'tracheal primordium')
sub_wt_early_object$experimental_condition = 'early'
unique(sub_wt_early_object$seurat_clusters)
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
sub_wt_early_object = subset(wt_early_object, subset = manual_celltypes == 'Trachea')
sub_wt_early_object$experimental_condition = 'early'
unique(sub_wt_early_object$seurat_clusters)
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Trachea")
sub_wt_late_object$experimental_condition = 'late'
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
sub_wt_early_object = subset(wt_early_object, subset = manual_celltypes == 'Trachea')
sub_wt_early_object$experimental_condition = 'early'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'Trachea')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
set.seed(123)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ")
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Germ Cell")
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
table(wt_late_object$manual_celltypes)
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Germ Cells")
sub_wt_late_object$experimental_condition = 'late'
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
sub_wt_early_object = subset(wt_early_object, subset = Integrated_tentativeCellType == 'Germ Cells')
sub_wt_early_object = subset(wt_early_object, subset = manual_celltypes == 'Germ Cells')
sub_wt_early_object$experimental_condition = 'early'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'Germ Cell')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
##########################
# TODO the below will be changed as time goes on
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "early_wt12_integrated/BDGP_automated_annotation_object.rds"))
sub_wt_early_object = subset(wt_early_object, subset = Integrated_tentativeCellType == 'germ cell')
sub_wt_early_object$experimental_condition = 'early'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'Germ Cell')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
cds <- learn_graph(cds, use_partition = TRUE)
cds <- cluster_cells(cds, resolution = 5e-3)
cds <- learn_graph(cds, use_partition = TRUE)
plot_cells(cds,
color_cells_by = "batch",
label_groups_by_cluster=FALSE,
label_leaves=FALSE,
label_branch_points=FALSE, cell_size = 1)
cds <- order_cells(cds)
plot_cells(cds,
color_cells_by = "pseudotime",
label_cell_groups=FALSE,
label_leaves=FALSE,
label_branch_points=FALSE,
graph_label_size=1.5, cell_size = 1, show_trajectory_graph = FALSE)
set.seed(123)
wt_late_object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object3.rds"))
sub_wt_late_object = subset(wt_late_object, subset = manual_celltypes == "Germ Cell")
sub_wt_late_object$experimental_condition = 'late'
##########################
# TODO the below will be changed as time goes on
wt_early_object = readRDS(file.path("results", ANALYSIS_VERSION, "early_wt12_integrated/BDGP_automated_annotation_object.rds"))
sub_wt_early_object = subset(wt_early_object, subset = Integrated_tentativeCellType == 'germ cell')
sub_wt_early_object$experimental_condition = 'early'
combined_ct_object = merge(sub_wt_early_object, sub_wt_late_object)
object = Seurat::CreateSeuratObject(combined_ct_object@assays$RNA@counts, project = 'Germ Cell')
object@meta.data$experimental_condition = combined_ct_object@meta.data$experimental_condition
object@meta.data$batch = paste0(combined_ct_object@meta.data$experimental_condition, "_", combined_ct_object@meta.data$batch)
object = Seurat::NormalizeData(object)
cellCycleMarkers = read.csv("accessory_data/cellCycleMarkers.csv", skip = 1, header = T)
object %<>% CellCycleScoring(s.features = cellCycleMarkers$S.phase.markers., g2m.features = cellCycleMarkers$G2.M.phase.markers.)
# start monocle3
expression_matrix = object@assays$RNA@counts
cell_metadata = object@meta.data
gene_annotation = object@assays$RNA@meta.features
gene_annotation$gene_short_name = rownames(gene_annotation)
cds <- new_cell_data_set(expression_matrix,
cell_metadata = cell_metadata,
gene_metadata = gene_annotation)
cds <- preprocess_cds(cds, num_dim = 100)
cds <- reduce_dimension(cds)
plot_cells(cds, label_groups_by_cluster=TRUE,  color_cells_by = "batch", cell_size = 1, label_cell_groups = FALSE)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'clean_sharable_data')
dir.create(TARGET_dir, recursive = TRUE)
##### clean the stage 10-12 embryos #####
object = readRDS(file.path('results', ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
Seurat::DimPlot(object)
View(object)
View(object@meta.data)
object@meta.data$Integrated_tentativeCellType = NULL
View(object)
View(object@meta.data)
saveRDS(object, file = file.path(TARGET_dir, 'stage10_12_seurat_object.rds'))
raw_matrix = object@assays$RNA@counts
write.csv(raw_matrix, file.path(TARGET_dir, 'stage10_12_raw_expression.txt'))
##### clean the stage 10-12 embryos #####
dir.create(file.path(TARGET_dir, 'stage_10_12'), recursive = TRUE)
withr::with_dir(
file.path(TARGET_dir, 'stage_10_12'),
{
raw_matrix = object@assays$RNA@counts
meta_data = object@meta.data
write(colnames(raw_matrix), file = file.path("stage_10_12_cell_id_colnames.txt"))
write(rownames(raw_matrix), file = file.path("stage_10_12_genes_rownames.txt"))
Matrix::writeMM(raw_matrix, file.path("stage_10_12_raw_counts.txt"))
write.csv(train_st, file = 'stage_10_12_meta_data.csv')
}
)
withr::with_dir(
file.path(TARGET_dir, 'stage_10_12'),
{
raw_matrix = object@assays$RNA@counts
meta_data = object@meta.data
write(colnames(raw_matrix), file = file.path("stage_10_12_cell_id_colnames.txt"))
write(rownames(raw_matrix), file = file.path("stage_10_12_genes_rownames.txt"))
Matrix::writeMM(raw_matrix, file.path("stage_10_12_raw_counts.txt"))
write.csv(meta_data, file = 'stage_10_12_meta_data.csv')
}
)
withr::with_dir(
file.path(TARGET_dir, 'stage_10_12'),
{
raw_matrix = object@assays$RNA@counts
meta_data = object@meta.data
write(colnames(raw_matrix), file = file.path("stage_10_12_cell_id_colnames.txt"))
write(rownames(raw_matrix), file = file.path("stage_10_12_genes_rownames.txt"))
Matrix::writeMM(raw_matrix, file.path("stage_10_12_raw_counts_sparse_matrix.txt"))
write.csv(meta_data, file = 'stage_10_12_meta_data.csv')
}
)
withr::with_dir(
file.path(TARGET_dir, 'stage_10_12'),
{
raw_matrix = object@assays$RNA@counts
meta_data = object@meta.data
write(colnames(raw_matrix), file = file.path("stage_10_12_cell_id_colnames.txt"))
write(rownames(raw_matrix), file = file.path("stage_10_12_genes_rownames.txt"))
Matrix::writeMM(raw_matrix, file.path("stage_10_12_raw_counts_sparse_matrix.txt"))
write.csv(meta_data, file = 'stage_10_12_meta_data.csv')
}
)
##### clean the stage 13-16 embryos #####
dir.create(file.path(TARGET_dir, 'stage_13-16'), recursive = TRUE)
object = readRDS(file.path('results', ANALYSIS_VERSION, "manual_annotation_wt_13/manual_celltype_object4.rds"))
object = readRDS(file.path('results', ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
DimPlot(object)
View(object)
View(object@meta.data)
colnames(object@meta.data)
colnames(object@meta.data)[20:48]
object@meta.data = object@meta.data[, -20:-48]
View(object)
View(object@meta.data)
object@meta.data$RNA_snn_res.1.5 = NULL
View(object)
View(object@meta.data)
DimPlot(object, group.by = 'manual_celltypes')
saveRDS(object, file = file.path(TARGET_dir, 'stage_13_16', 'stage13_16_seurat_object.rds'))
##### clean the stage 13-16 embryos #####
dir.create(file.path(TARGET_dir, 'stage_13-16'), recursive = TRUE)
saveRDS(object, file = file.path(TARGET_dir, 'stage_13_16', 'stage13_16_seurat_object.rds'))
##### clean the stage 13-16 embryos #####
dir.create(file.path(TARGET_dir, 'stage_13_16'), recursive = TRUE)
object = readRDS(file.path('results', ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
object@meta.data = object@meta.data[, -20:-48]
object@meta.data$RNA_snn_res.1.5 = NULL
DimPlot(object, group.by = 'manual_celltypes')
View(object)
View(object@meta.data)
saveRDS(object, file = file.path(TARGET_dir, 'stage_13_16', 'stage13_16_seurat_object.rds'))
withr::with_dir(
file.path(TARGET_dir, 'stage_13_16'),
{
raw_matrix = object@assays$RNA@counts
meta_data = object@meta.data
write(colnames(raw_matrix), file = file.path("stage_13_16_cell_id_colnames.txt"))
write(rownames(raw_matrix), file = file.path("stage_13_16_genes_rownames.txt"))
Matrix::writeMM(raw_matrix, file.path("stage_13_16_raw_counts_sparse_matrix.txt"))
write.csv(meta_data, file = 'stage_13_16_meta_data.csv')
}
)
