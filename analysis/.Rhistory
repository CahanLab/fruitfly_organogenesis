early_TFs = intersect(TF_tab$symbol, early_sum_test$symbol)
early_TFs = intersect(TF_tab$symbol, early_sum_test$feature)
late_TFs = intersect(TF_tab$symbol, late_sum_test$feature)
early_sum_test$feature
grep("CrebA", early_sum_test$feature)
early_TFs = intersect(TF_tab$symbol, early_sum_test$feature)
early_TFs
late_TFs = intersect(TF_tab$symbol, late_sum_test$feature)
late_TFs
heatmap_df = plot_heatmap(cds, early_TFs, bandwidth = 3)
png(filename = file.path(TARGET_dir, paste0("early_TF_SG_dynamic_gene_heatmap.png")), height = 500, width = 1000, res = 200)
pheatmap::pheatmap(heatmap_df, cluster_cols = FALSE, cluster_rows = FALSE)
dev.off()
View(combined_DE_genes)
plot_genes_by_group(cds)
library(monocle3)
plot_genes_by_group(cds, markers = c('pip', 'sage'))
View(cds)
cds@colData
#############################
# plot out the Golgi Vesicle gene expression
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "monocle3_no_batch_correct_object.rds"))
cds@colData
colnames(cds@colData)
cds@colData$cell_type = NA
cds@colData[clusters(cds) == 2, 'cell_type'] = 'Early Salivary Gland Cells'
cds@colData[clusters(cds) == 1, 'cell_type'] = 'Late Salivary Gland Cells'
plot_genes_by_group(cds, markers = c("sage", 'fkh'), group_cells_by = 'cell_type')
plot_genes_by_group(cds, markers = c("sage", 'eyg'), group_cells_by = 'cell_type')
?plot_genes_by_group
plot_genes_by_group(cds, markers = c("sage", 'fkh'), group_cells_by = 'cell_type')
table(combined_DE_genes$type)
middle_sum_test = combined_DE_genes[grep("both", combined_DE_genes$type), 'feature']
middle_sum_test = combined_DE_genes[grep("both", combined_DE_genes$type), ]
middle_TF = intersect(TF_tab$symbol, unique(middle_sum_test$symbol))
plot_genes_by_group(cds, markers = c("sage", 'fkh', 'sens', 'CrebA'), group_cells_by = 'cell_type')
plot_cells(cds, genes = c())
plot_cells(cds, genes = c('sage', 'sens', 'fkh', 'CrebA'), cell_size = 1)
plot_genes_violin(cds, group_cells_by = 'cell_type')
late_object = readRDS("results/v18/manual_annotation_wt13/manual_celltype_object4.rds")
FeaturePlot(late_object, features = 'sens')
early_object = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
FeaturePlot(early_object, features = 'sens')
plot_genes_by_group(cds, markers = middle_TF, norm_method = 'size_only')
plot_genes_by_group(cds, markers = middle_TF, norm_method = 'size_only', group_cells_by = 'cell_type')
View(early_sum_test)
View(sub_type_rank_sum)
plot_genes_by_group(cds, markers = c(early_TFs, middle_TF), norm_method = 'size_only', group_cells_by = 'cell_type')
plot_genes_by_group(cds, markers = middle_TF, norm_method = 'size_only', group_cells_by = 'cell_type')
meta_tab = cds@colData
normalized_counts(cds)
norm_data = normalized_counts(cds)
meta_tab$sens = norm_data['sens', ]
p <- ggplot(meta_tab, aes(x=cell_type, y=sens)) +
geom_violin()
p
p <- ggplot(meta_tab, aes(x=cell_type, y=sens)) +
geom_violin()
meta_tab
p <- ggplot(meta_tab, aes(x=cell_type, y=sens)) +
geom_violin()
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=sens)) +
geom_violin()
p
middle_TFs
middle_TF
meta_tab$fkh = norm_data['fkh', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=sens)) +
geom_violin()
p <- ggplot(meta_tab, aes(x=cell_type, y=fkh)) +
geom_violin()
p
meta_tab$CrebA = norm_data['CrebA', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=CrebA)) +
geom_violin()
p
meta_tab$CrebA = norm_data['sage', ]
meta_tab$sage = norm_data['sage', ]
meta_tab$CrebA = norm_data['CrebA', ]
meta_tab$sage = norm_data['sage', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=sage)) +
geom_violin()
p
meta_tab$toe = norm_data['toe', ]
p <- ggplot(meta_tab, aes(x=cell_type, y=toe)) +
geom_violin()
p
meta_tab$eyg = norm_data['eyg', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=eyg)) +
geom_violin()
p
meta_tab$trh = norm_data['trh', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=trh)) +
geom_violin()
p
meta_tab$rib = norm_data['rib', ]
meta_tab = as.data.frame(meta_tab)
p <- ggplot(meta_tab, aes(x=cell_type, y=rib)) +
geom_violin()
p
FeaturePlot(late_object, features = 'rib')
FeaturePlot(early_object, features = 'rib')
FeaturePlot(early_object, features = 'eyg')
FeaturePlot(late_object, features = 'eyg')
# this is for the dotplot
plot_genes_by_group(cds, markers = c(early_TF, middle_TF), norm_method = 'size_only', group_cells_by = 'cell_type')
# this is for the dotplot
plot_genes_by_group(cds, markers = c(early_TFs, middle_TF), norm_method = 'size_only', group_cells_by = 'cell_type')
?plot_genes_by_group
# this is for the dotplot
plot_genes_by_group(cds, markers = c(early_TFs, middle_TF), norm_method = 'log', group_cells_by = 'cell_type')
FeaturePlot(late_object, features = 'ttk')
FeaturePlot(late_object, features = 'bowl')
FeaturePlot(late_object, features = 'SoxN')
# this is for the dotplot
plot_genes_by_group(cds, markers = c(early_TFs, middle_TF), norm_method = 'log', group_cells_by = 'cell_type') +
xlab("Cell Types")
# this is for the dotplot
all_TFs = c(early_TFs, middle_TF)
meta_tab = cds@colData
norm_data = normalized_counts(cds)
unique(meta_tab$cell_type)
late_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Late Salivary Gland Cells', ])]
early_norm[TF, ] > 0 / ncol(early_norm)
early_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Early Salivary Gland Cells', ])]
late_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Late Salivary Gland Cells', ])]
early_norm[TF, ] > 0 / ncol(early_norm)
TF = 'CrebA'
early_norm[TF, ] > 0 / ncol(early_norm)
sum(early_norm[TF, ] > 0) / ncol(early_norm)
percent_late = sum(late_norm[TF, ] > 0) / ncol(late_norm)
diff = abs(percent_early - percent_late)
percent_early = sum(early_norm[TF, ] > 0) / ncol(early_norm)
percent_late = sum(late_norm[TF, ] > 0) / ncol(late_norm)
diff = abs(percent_early - percent_late)
diff_count = c()
for(TF in all_TFs) {
early_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Early Salivary Gland Cells', ])]
late_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Late Salivary Gland Cells', ])]
percent_early = sum(early_norm[TF, ] > 0) / ncol(early_norm)
percent_late = sum(late_norm[TF, ] > 0) / ncol(late_norm)
diff = abs(percent_early - percent_late)
diff_count = c(diff_count, diff)
}
names(diff_count) = all_TFs
sort(diff_count)
diff_count = c()
for(TF in all_TFs) {
early_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Early Salivary Gland Cells', ])]
late_norm = norm_data[, rownames(meta_tab[meta_tab$cell_type == 'Late Salivary Gland Cells', ])]
percent_early = sum(early_norm[TF, ] > 0) / ncol(early_norm)
percent_late = sum(late_norm[TF, ] > 0) / ncol(late_norm)
diff = abs(percent_early - percent_late)
diff_count = c(diff_count, percent_late)
}
names(diff_count) = all_TFs
sort(diff_count)
plot_genes_by_group(cds, markers = names(sort(diff_count)), norm_method = 'log', group_cells_by = 'cell_type') +
xlab("Cell Types")
?plot_genes_by_group
plot_genes_by_group(cds, markers = names(sort(diff_count)), norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types")
diff_count
sort(diff_count)
late_object = readRDS("results/v18/manual_annotation_rib/manual_celltyping_4_obj.rds")
dim(late_object)
table(late_object@meta.data$batch)
24024 + 15409
late_object = readRDS("results/v18/manual_annotation_wt13/manual_celltype_object4.rds")
table(late_object@meta.data$batch)
22054 + 20663
early_object = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
table(early_object@meta.data$batch)
13207 + 7378
late_object@meta.data$nFeature_RNA
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
late_wt = readRDS("results/v18/manual_annotation_wt13/manual_celltype_object4.rds")
median(late_wt@meta.data$nFeature_RNA)
early_wt = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
median(early_wt@meta.data$nFeature_RNA)
length(unique(late_wt$manual_celltypes))
unique(late_wt$manual_celltypes)
length(unique(early_wt$manual_celltypes))
cds = readRDS("results/v18/refined_wt_late_early_germ/monocle3_no_batch_correct_object.rds")
library(monocle3)
plot_cells(cds, genes = 'wun')
plot_cells(cds, genes = 'wun', cell_size = 1)
plot_cells(cds, genes = c('wun', 'wun2'), cell_size = 1)
plot_cells(cds, genes = c('wun', 'wun2', 'lsd'), cell_size = 1)
plot_cells(cds, genes = c('wun', 'wun2', 'lsd2'), cell_size = 1)
plot_cells(cds, genes = c('wun', 'wun2', 'lsd-2'), cell_size = 1)
plot_cells(cds, genes = c('wun', 'wun2', 'Lsd-2'), cell_size = 1)
monocle3::plot_genes_violin(cds, grou_cells_by = 'clusters')
cds@metadata
cds@colData
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_late_all_marker_genes')
dir.create(TARGET_dir, recursive = TRUE)
object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
library(Seurat)
VlnPlot(object, features = 'yellow-e3')
VlnPlot(object, features = 'yellow-e3', pt.size = 0)
VlnPlot(object, features = 'yellow-e3', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'CG7296', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'ft', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'bnb', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'Osi7', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'CG10591', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'Osi6', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'CG9184', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'wrapper', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'repo', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'sano', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'Obp99a', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'Tom', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'Appl', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'mira', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'elav', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'nerfin-1', pt.size = 0, group.by = 'manual_celltypes')
VlnPlot(object, features = 'dhd', pt.size = 0, group.by = 'manual_celltypes')
FeaturePlot(object, features = 'dhd')
VlnPlot(object, features = 'Hsp27', pt.size = 0, group.by = 'manual_celltypes')
FeaturePlot(object, features = 'Hsp27')
FeaturePlot(object, features = 'Hsp26')
cds = readRDS("results/v18/refined_wt_late_early_germ/monocle3_no_batch_correct_object.rds")
plot_cells(cds, genes = 'Hsp27')
plot_cells(cds, genes = 'Hsp27', cell_size = 1)
plot_cells(cds, genes = 'Hsp26', cell_size = 1)
plot_cells(cds, genes = 'dhd', cell_size = 1)
FeaturePlot(object, features = 'Tm2')
selected_marker_genes = read.csv("accessory_data/marker_genes/wt13_marker_genes.csv")
DotPlot(
object,
assay = NULL,
features = selected_marker_genes$marker_genes,
cols = c("lightgrey", "blue"),
col.min = -2.5,
col.max = 2.5,
dot.min = 0,
dot.scale = 6,
idents = NULL,
group.by = NULL,
split.by = NULL,
cluster.idents = FALSE,
scale = TRUE,
scale.by = "radius",
scale.min = NA,
scale.max = NA
)
FeaturePlot(object, 'beta4GalNacTA')
grep('beta4Gal', rownames(object))
rownames(object)[grep('beta4Gal', rownames(object))]
DotPlot(
object,
assay = NULL,
features = selected_marker_genes$marker_genes,
cols = c("lightgrey", "blue"),
col.min = -2.5,
col.max = 2.5,
dot.min = 0,
dot.scale = 6,
idents = NULL,
group.by = NULL,
split.by = NULL,
cluster.idents = FALSE,
scale = TRUE,
scale.by = "radius",
scale.min = NA,
scale.max = NA
)
selected_marker_genes = read.csv("accessory_data/marker_genes/wt13_marker_genes.csv")
DotPlot(
object,
assay = NULL,
features = selected_marker_genes$marker_genes,
cols = c("lightgrey", "blue"),
col.min = -2.5,
col.max = 2.5,
dot.min = 0,
dot.scale = 6,
idents = NULL,
group.by = NULL,
split.by = NULL,
cluster.idents = FALSE,
scale = TRUE,
scale.by = "radius",
scale.min = NA,
scale.max = NA
)
DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
cols = c("lightgrey", "blue"),
col.min = -2.5,
col.max = 2.5,
dot.min = 0,
dot.scale = 6,
idents = NULL,
group.by = NULL,
split.by = NULL,
cluster.idents = FALSE,
scale = TRUE,
scale.by = "radius",
scale.min = NA,
scale.max = NA
)
DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
group.by = 'manual_celltypes'
)
p = DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
group.by = 'manual_celltypes'
)
p + cord_flip()
p + coord_flip()
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0))
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 0.2, hjust=1))
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 0.2, hjust=0.5))
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=0.5))
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
p = DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
group.by = 'manual_celltypes', col.max = 3
)
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
selected_marker_genes = selected_marker_genes[order(selected_marker_genes$annotation), ]
p = DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
group.by = 'manual_celltypes', col.max = 3
)
p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(file.path(TARGET_dir, 'genes_dotplot.png'), plot = p, width = 8, height = 6)
p = DotPlot(
object,
assay = NULL,
features = unique(selected_marker_genes$marker_genes),
group.by = 'manual_celltypes', col.max = 3
)
p = p + coord_flip() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(file.path(TARGET_dir, 'genes_dotplot.png'), plot = p, width = 8, height = 6)
ggsave(file.path(TARGET_dir, 'genes_dotplot.png'), plot = p, width = 12, height = 10)
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_early_UMAP_proportion')
dir.create(TARGET_dir, recursive = TRUE)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
qual_col_pals = qual_col_pals[rownames(qual_col_pals) != 'Dark2', ]
qual_col_pals = qual_col_pals[rownames(qual_col_pals) != 'Set2', ]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector = col_vector[col_vector != col_vector[4]]
col_vector = col_vector[col_vector != col_vector[4]]
wt_object = readRDS(file.path('results', ANALYSIS_VERSION, 'manual_annotation_early_wt12/manual_celltype_object1.rds'))
proportion_df = data.frame("cell_types" = names(table(wt_object@meta.data$manual_celltypes)),
"number_cells" = as.vector(table(wt_object@meta.data$manual_celltypes)))
proportion_df$cell_proportion = proportion_df$number_cells / sum(proportion_df$number_cells)
View(proportion_df)
0.006 * 100
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_late_UMAP_proportion')
dir.create(TARGET_dir, recursive = TRUE)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
qual_col_pals = qual_col_pals[rownames(qual_col_pals) != 'Dark2', ]
qual_col_pals = qual_col_pals[rownames(qual_col_pals) != 'Set2', ]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector = col_vector[col_vector != col_vector[4]]
col_vector = col_vector[col_vector != col_vector[4]]
wt_object = readRDS(file.path('results', ANALYSIS_VERSION, 'manual_annotation_wt13/manual_celltype_object4.rds'))
wt_object@meta.data[wt_object@meta.data$batch == 'rep_3', 'batch'] = 'rep_2'
proportion_df = data.frame("cell_types" = names(table(wt_object@meta.data$manual_celltypes)),
"number_cells" = as.vector(table(wt_object@meta.data$manual_celltypes)))
proportion_df$cell_proportion = proportion_df$number_cells / sum(proportion_df$number_cells)
View(proportion_df)
600/6000
nrow(wt_object)
ncol(wt_object)
271 / 42717
200 / 6000
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_late_selected_marker_genes')
dir.create(TARGET_dir, recursive = TRUE)
object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
marker_gene_list = list()
library(Seurat)
FeaturePlot(object, features = 'ect')
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_late_selected_marker_genes')
dir.create(TARGET_dir, recursive = TRUE)
object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_wt13/manual_celltype_object4.rds"))
marker_gene_list = list()
marker_gene_list[['Dorsal Vessel']] = c('tin', 'prc', 'tup', 'Him')
marker_gene_list[['Garland Cells']] = c('CG42255', 'beta4GalNacTA', 'Amnionless', 'CG15209')
marker_gene_list[['Esophagus']] = c('ect', 'amd', 'CG13631', 'Osi7', 'Osi14')
marker_gene_list[['Hypopharynx']] = c('CG6118', 'bbg', 'CG10211', 'Osi6', 'Wdr62', 'ect')
marker_gene_list[['Epipharynx']] = c('yellow-e3', 'Optix', 'sprt')
marker_gene_list[['Hindgut Muscle']] = c('Wnt4', 'Abd-B', 'bin', 'up')
marker_gene_list[['Pharyngeal Muscle']] = c('bt', 'up', 'CG5080')
marker_gene_list[['Optic Lobe']] = c('E(spl)m5-HLH', 'Obp99a', 'SoxN')
marker_gene_list[['Malpighian tubules']] = c('CG31272', 'bw', 'ZnT35C', 'Ssk', 'CG3699', 'CG7860')
marker_gene_list[['Oenocytes']] = c('Cyp4g1', 'CG18609', 'CG17562')
marker_gene_list[['Hindgut']] = c('otp', 'CG17780', 'CG13082')
marker_gene_list[['Salivary Gland']] = c('pip', 'CG13159', 'CG14756')
withr::with_dir(TARGET_dir, {
for(ct in names(marker_gene_list)) {
for(gene in marker_gene_list[[ct]]) {
if(gene %in% rownames(object)) {
p = Seurat::VlnPlot(object, features = gene, group.by = 'manual_celltypes', pt.size = 0) +
ylab("Normalized Expression") +
xlab("Stage 13 - 16: Drosophila Embryonic Cell Types") +
ggtitle(paste0(gene, " (", ct, ")")) +
theme(text = element_text(size = 16), legend.text=element_text(size=24), legend.position = "none")
ggsave(filename = paste0("vlnplot_", ct, "_", gene, ".png"), plot = p, width = 17, height = 10)
p = Seurat::FeaturePlot(object, features = gene) +
ggtitle(paste0(gene, " (", ct, ")")) +
theme(text = element_text(size = 16), legend.text=element_text(size=24), legend.position = 'none')
ggsave(filename = paste0("UMAP_", ct, "_", gene, ".png"), plot = p, width = 10, height = 10)
}
}
}
})
