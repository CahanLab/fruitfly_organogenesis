target_genes = eval(parse(text = target_genes))
norm_exp_2 = plot_heatmap(cds, target_genes)
plot_norm_2 = average_geneset(norm_exp_2)
plot_norm_2$geneset = 'Golgi vesicle transport (average expression)'
x = ccf(plot_norm_2$scaled_exp, plot_norm_1$scaled_exp)
correlation = x$acf[, 1, 1]
names(correlation) = x$lag[, 1, 1]
max_correlation = correlation[which.max(correlation)]
plot_df = rbind(plot_norm_1, plot_norm_2)
plot_df$geneset = stringr::str_replace_all(plot_df$geneset, "\\(", "\n\\(\\")
p<-ggplot(plot_df, aes(x=pseudotime, y=scaled_exp, group=geneset, color = geneset)) +
xlab("pseudotime") +
ylab("average expression") +
ggtitle(paste0('Golg vesicle transport vs regulation of tube size')) +
geom_line() +
theme_bw() +
scale_color_brewer(palette='Set2') +
annotate("text", x=0.8, y=1, label= paste0("cross-correlation: ", round(as.numeric(max_correlation), digits = 3),  "\n lag: ", round(as.numeric(names(max_correlation)) / nrow(plot_norm_1), digits = 3))) +
guides(color=guide_legend(title="")) +
theme(text = element_text(size = 18))
ggsave(file.path(TARGET_dir, paste0(term, "golgi_vs_tube_size.png")), plot = p, width = 8, height = 5)
# look at correlation between chitin and tube size
term = 'chitin-based cuticle development (GO:0040003)'
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
norm_exp_2 = plot_heatmap(cds, target_genes)
plot_norm_2 = average_geneset(norm_exp_2)
plot_norm_2$geneset = 'chitin-based cuticle (average expression)'
x = ccf(plot_norm_2$scaled_exp, plot_norm_1$scaled_exp)
correlation = x$acf[, 1, 1]
names(correlation) = x$lag[, 1, 1]
max_correlation = correlation[which.max(correlation)]
plot_df = rbind(plot_norm_1, plot_norm_2)
plot_df$geneset = stringr::str_replace_all(plot_df$geneset, "\\(", "\n\\(\\")
p<-ggplot(plot_df, aes(x=pseudotime, y=scaled_exp, group=geneset, color = geneset)) +
xlab("pseudotime") +
ylab("average expression") +
ggtitle(paste0('chitin-based cuticle vs regulation of tube size')) +
geom_line() +
theme_bw() +
scale_color_brewer(palette='Set2') +
annotate("text", x=0.8, y=1, label= paste0("cross-correlation: ", round(as.numeric(max_correlation), digits = 3),  "\n lag: ", round(as.numeric(names(max_correlation)) / nrow(plot_norm_1), digits = 3))) +
guides(color=guide_legend(title="")) +
theme(text = element_text(size = 18))
ggsave(file.path(TARGET_dir, paste0(term, "chitin_vs_tube_size.png")), plot = p, width = 8, height = 5)
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
library(ggsignif)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_germ')
dir.create(TARGET_dir, recursive = TRUE)
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
rank_sum[rank_sum$group == '1', 'group'] = 'Unknown 1'
rank_sum[rank_sum$group == '3', 'group'] = 'Unknown 2'
rank_sum[rank_sum$group == '5', 'group'] = 'Early Germ Cells'
rank_sum[rank_sum$group == '6', 'group'] = 'Middle Germ Cells 1'
rank_sum[rank_sum$group == '2', 'group'] = 'Middle Germ Cells 2'
rank_sum[rank_sum$group == '4', 'group'] = 'Late Germ Cells'
write.csv(rank_sum, file = file.path(TARGET_dir, 'DE_genes.csv'))
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "monocle3_no_batch_correct_object.rds"))
plot_cells(cds, genes = 'BigH1', cell_size = 1)
# this is to plot out the dead cells
plot_cells(cds, genes = c('nos', 'wun2', 'Lsd-1', 'Lsd-2'), cell_size = 1, show_trajectory_graph = FALSE)
UMAP_coord = cds@int_colData$reducedDims$UMAP
colnames(UMAP_coord) = c("UMAP_1", "UMAP_2")
UMAP_coord = as.data.frame(UMAP_coord)
UMAP_coord$clusters = as.vector(monocle3::clusters(cds))
UMAP_coord$pseudotime = as.vector(monocle3::pseudotime(cds))
UMAP_coord$batch = as.vector(cds@colData$batch)
UMAP_coord[UMAP_coord$batch == 'early_rep_1', 'batch'] = 'Stage 10-12 rep 1'
UMAP_coord[UMAP_coord$batch == 'early_rep_2', 'batch'] = 'Stage 10-12 rep 2'
UMAP_coord[UMAP_coord$batch == 'late_rep_1', 'batch'] = 'Stage 13-16 rep 1'
UMAP_coord[UMAP_coord$batch == 'late_rep_3', 'batch'] = 'Stage 13-16 rep 2'
UMAP_coord$cell_type = UMAP_coord$clusters
UMAP_coord[UMAP_coord$clusters == '1', 'cell_type'] = 'Unknown 1'
UMAP_coord[UMAP_coord$clusters == '3', 'cell_type'] = 'Unknown 2'
UMAP_coord[UMAP_coord$clusters == '5', 'cell_type'] = 'Early Germ Cells'
UMAP_coord[UMAP_coord$clusters == '6', 'cell_type'] = 'Middle Germ Cells 1'
UMAP_coord[UMAP_coord$clusters == '2', 'cell_type'] = 'Middle Germ Cells 2'
UMAP_coord[UMAP_coord$clusters == '4', 'cell_type'] = 'Late Germ Cells'
p = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color = pseudotime)) +
geom_point() +
theme_minimal() +
scale_color_viridis_c(option = "plasma") +
guides(fill=guide_legend(title="pseudo-time")) +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "pseudotime.png"), plot = p, width = 8, height = 6)
p = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color = batch)) +
geom_point() +
theme_minimal() +
scale_color_brewer(palette = 'Set1') +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "batch.png"), plot = p, width = 8, height = 6)
p = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color = clusters)) +
geom_point() +
theme_minimal() +
scale_color_brewer(palette = 'Set3') +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "cluster.png"), plot = p, width = 8, height = 6)
p = ggplot(UMAP_coord, aes(x=reorder(batch, pseudotime), y=pseudotime, fill = batch)) +
geom_violin() +
geom_boxplot(width=0.1) +
theme_minimal() +
scale_fill_brewer(palette = 'Set1') +
ylab("pseudotime") +
xlab("batch") +
theme(text = element_text(size = 20), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(filename = file.path(TARGET_dir, "violin_pseudotime.png"), plot = p, width = 8, height = 6)
UMAP_coord$cell_type <- factor(UMAP_coord$cell_type, levels = c("Early Germ Cells",
"Middle Germ Cells 1",
"Middle Germ Cells 2",
"Late Germ Cells",
"Unknown 1",
"Unknown 2"))
p = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color = cell_type)) +
guides(color=guide_legend(title="")) +
geom_point() +
theme_minimal() +
scale_color_brewer(palette = 'Set2') +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "celltypes.png"), plot = p, width = 8, height = 6)
##### plotting the gene sets results #####
norm_exp = monocle3::normalized_counts(cds)
gene_interest_list = c('eya', 'wg', 'tkv', 'Dl', 'shg', 'Prosalpha5', 'Sod1', 'BigH1', 'bru1', 'dsx', 'dhd', 'vas', 'pum',
'nos', 'bam', 'osk', 'pgc', 'gcl', 'nos', 'dpp', 'N', 'Pomp')
for(gene_interest in gene_interest_list) {
UMAP_coord$gene_exp = norm_exp[gene_interest, ]
p = ggplot(UMAP_coord, aes(x=reorder(cell_type, -gene_exp), y=gene_exp, fill = cell_type)) +
geom_violin() +
guides(fill=guide_legend(title="")) +
geom_boxplot(width=0.1) +
theme_minimal() +
scale_fill_brewer(palette = 'Set2') +
ylab(paste0(gene_interest, " normalized expression")) +
xlab("cell type") +
theme(text = element_text(size = 18), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggsave(filename = file.path(TARGET_dir, paste0("violin_", gene_interest, ".png")), plot = p, width = 8, height = 6)
}
###### plot out the GSEA results #####
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "4_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_late_GSEA_results.csv"))
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"hydrogen ion transmembrane transport (GO:1902600)",
'mitochondrial transport (GO:0006839)',
'ATP biosynthetic process (GO:0006754)',
'ATP hydrolysis coupled cation transmembrane transport (GO:0099132)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "ATP hydrolysis coupled cation transmembrane transport (GO:0099132)", 'pathway'] = 'ATP hydrolysis coupled \n cation transmembrane transport (GO:0099132)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[4]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "late_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
# middle stage 2
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "2_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_middle_2_GSEA_results.csv"))
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of cellular macromolecule biosynthetic process (GO:2000113)", 'pathway'] = 'negative regulation of cellular \n macromolecule biosynthetic process (GO:2000113)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
# middle stage 1
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "6_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_middle_1_GSEA_results.csv"))
focus_gsea = c("mRNA splicing, via spliceosome (GO:0000398)",
"cytoskeleton-dependent cytokinesis (GO:0061640)",
"mitotic cytokinesis (GO:0000281)",
"cytoplasmic translation (GO:0002181)",
"DNA packaging (GO:0006323)")
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[2]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_1_Cells_GSEA_results.png"), plot = p, width = 10, height = 4)
# early stage
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "5_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_early_GSEA_results.csv"))
focus_gsea = c("mRNA splicing, via spliceosome (GO:0000398)",
"regulation of gene expression (GO:0010468)",
"Notch signaling pathway (GO:0007219)",
"regulation of macromolecule metabolic process (GO:0060255)")
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[1]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "early_Cells_GSEA_results.png"), plot = p, width = 10, height = 4)
# unknown 1 stage
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "1_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_unknown_1_GSEA_results.csv"))
focus_gsea = c("cytoplasmic translation (GO:0002181)",
"ribosome assembly (GO:0042255)",
"ribosomal small subunit biogenesis (GO:0042274)",
"ribosomal large subunit biogenesis (GO:0042273)")
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 8, 'Set2')[5]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "unknown_1_Cells_GSEA_results.png"), plot = p, width = 10, height = 4)
# unknown 2 stage
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "3_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_unknown_2_GSEA_results.csv"))
focus_gsea = c("positive regulation of transcription, DNA-templated (GO:0045893)",
"Wnt signaling pathway (GO:0016055)",
"cell-cell adhesion via plasma-membrane adhesion molecules (GO:0098742)",
"imaginal disc-derived wing morphogenesis (GO:0007476)")
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "cell-cell adhesion via plasma-membrane adhesion molecules (GO:0098742)", 'pathway'] = "cell-cell adhesion via plasma-membrane \n adhesion molecules (GO:0098742)"
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 8, 'Set2')[6]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "unknown_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4)
##### make some dotplots #####
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "monocle3_no_batch_correct_object.rds"))
cds@colData$cell_type = NA
cds@colData[clusters(cds) == '1', 'cell_type'] = 'Unknown 1'
cds@colData[clusters(cds) == '3', 'cell_type'] = 'Unknown 2'
cds@colData[clusters(cds) == '5', 'cell_type'] = 'Early Germ Cells'
cds@colData[clusters(cds) == '6', 'cell_type'] = 'Middle Germ Cells 1'
cds@colData[clusters(cds) == '2', 'cell_type'] = 'Middle Germ Cells 2'
cds@colData[clusters(cds) == '4', 'cell_type'] = 'Late Germ Cells'
p = plot_genes_by_group(cds, markers = c('nos', 'gcl', 'pgc', 'vas'), norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Unknown 2', 'Unknown 1', 'Late Germ Cells', 'Middle Germ Cells 2', 'Middle Germ Cells 1', 'Early Germ Cells')) +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, 'germ_stem_cell_markers.png'), plot = p, width = 10, height = 5)
# geensets for germ-line stem cell asymmetric division
set_genes = c("Ote", "eff", "aurB", "pelo", "twin", "eIF4A")
p = plot_genes_by_group(cds, markers = set_genes, norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Unknown 2', 'Unknown 1', 'Late Germ Cells', 'Middle Germ Cells 2', 'Middle Germ Cells 1', 'Early Germ Cells')) +
theme(text = element_text(size = 24))
# somatic female genes
set_genes = c("Sxl", "tra")
p = plot_genes_by_group(cds, markers = set_genes, norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Unknown 2', 'Unknown 1', 'Late Germ Cells', 'Middle Germ Cells 2', 'Middle Germ Cells 1', 'Early Germ Cells')) +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, 'female_somatic_markers.png'), plot = p, width = 8, height = 5)
# male germ genes
set_genes = c("dpa", "Rs1", "Mcm5", "CG9253", "CG6693", "nclb", "Klp61F")
p = plot_genes_by_group(cds, markers = set_genes, norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Unknown 2', 'Unknown 1', 'Late Germ Cells', 'Middle Germ Cells 2', 'Middle Germ Cells 1', 'Early Germ Cells')) +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, 'male_germ_markers.png'), plot = p, width = 12, height = 5)
# female germ genes
set_genes = c("ovo", "otu")
p = plot_genes_by_group(cds, markers = set_genes, norm_method = 'log', group_cells_by = 'cell_type', ordering_type = 'none') +
xlab("Cell Types") +
coord_flip() +
scale_x_discrete(limits = c('Unknown 2', 'Unknown 1', 'Late Germ Cells', 'Middle Germ Cells 2', 'Middle Germ Cells 1', 'Early Germ Cells')) +
theme(text = element_text(size = 24))
p
ggsave(filename = file.path(TARGET_dir, 'female_germ_markers.png'), plot = p, width = 8, height = 5)
# middle stage 2
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "2_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_middle_2_GSEA_results.csv"))
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of cellular macromolecule biosynthetic process (GO:2000113)", 'pathway'] = 'negative regulation of cellular \n macromolecule biosynthetic process (GO:2000113)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
View(GSEA_results)
term = "negative regulation of translation (GO:0017148)"
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
term_translation = term
term = "negative regulation of transcription, DNA-templated (GO:0045892)"
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
term_transcription = term
length(intersect(term_transcription, term_translation))
term_translation
term = "negative regulation of translation (GO:0017148)"
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
genes_translation = target_genes
term = "negative regulation of transcription, DNA-templated (GO:0045892)"
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
genes_transcription = target_genes
length(intersect(genes_transcription, genes_translation))
genes_transcription
length(genes_transcription)
length(genes_translation)
genes_translation
length(intersect(genes_transcription, genes_translation))
intersect(genes_transcription, genes_translation)
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)',
'negative regulation of nucleic acid-templated transcription (GO:1903507)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of cellular macromolecule biosynthetic process (GO:2000113)", 'pathway'] = 'negative regulation of cellular \n macromolecule biosynthetic process (GO:2000113)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
p
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)',
'regulation of transcription, DNA-templated (GO:0006355)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of cellular macromolecule biosynthetic process (GO:2000113)", 'pathway'] = 'negative regulation of cellular \n macromolecule biosynthetic process (GO:2000113)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)',
'negative regulation of transcription, DNA-templated (GO:0045892)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of cellular macromolecule biosynthetic process (GO:2000113)", 'pathway'] = 'negative regulation of cellular \n macromolecule biosynthetic process (GO:2000113)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
# middle stage 2
GSEA_results = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "2_gsea_results.csv"), row.names = 1)
GSEA_results = GSEA_results[GSEA_results$padj < 0.05, ]
GSEA_results = GSEA_results[GSEA_results$NES > 0, ]
write.csv(GSEA_results, file = file.path(TARGET_dir, "sig_middle_2_GSEA_results.csv"))
focus_gsea = c("proteasomal protein catabolic process (GO:0010498)",
"regulation of oskar mRNA translation (GO:0046011)",
"negative regulation of translation (GO:0017148)",
'pole cell migration (GO:0007280)',
'negative regulation of transcription, DNA-templated (GO:0045892)')
sub_GSEA_results = GSEA_results[GSEA_results$pathway %in% focus_gsea, ]
sub_GSEA_results$log_pval = -log10(sub_GSEA_results$padj)
sub_GSEA_results[sub_GSEA_results$pathway == "negative regulation of transcription, DNA-templated (GO:0045892)", 'pathway'] = 'negative regulation of transcription, \nDNA-templated (GO:0045892)'
sub_GSEA_results$pathway = stringr::str_replace_all(sub_GSEA_results$pathway, "\\(", "\n\\(\\")
p = ggplot(data=sub_GSEA_results, aes(x=reorder(pathway, log_pval), y=log_pval)) +
geom_bar(stat="identity", fill = RColorBrewer::brewer.pal(n = 6, 'Set2')[3]) + coord_flip() +
xlab("GO Biological Processes") +
ylab("-log10 adjusted p-value") +
ggtitle("") +
theme_bw() +
theme(text = element_text(size = 24))
ggsave(filename = file.path(TARGET_dir, "middle_2_Cells_GSEA_results.png"), plot = p, width = 10, height = 4.7)
ccf
?ccf
stats::ccf
library(stats)
print(package_version(stats))
print(package_version('stats'))
package_vesion('stats')
package_version('stats')
smoothed
?ksmooth
library(ggplot2)
library(RColorBrewer)
library(ggdendroplot)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'wt_early_selected_marker_genes')
object = readRDS(file.path("results", ANALYSIS_VERSION, "manual_annotation_early_wt12/manual_celltype_object1.rds"))
Seurat::FeaturePlot(object, features = 'smog')
Seurat::VlnPlot(object, features = 'smog')
Seurat::VlnPlot(object, features = 'smog', group.by = 'manual_celltype')
Seurat::VlnPlot(object, features = 'smog', group.by = 'manual_celltypes')
library(Seurat)
library(viridis)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "cross_study_comparison_early_wt12")
dir.create(TARGET_dir)
our_object = readRDS(file.path('results', ANALYSIS_VERSION, 'manual_annotation_early_wt12/manual_celltype_object1.rds'))
# load in Seroka data
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
Seroka_object = Seroka_object[, Seroka_object$dataset == 'stg12']
FeaturePlot(Seroka_object, features = 'smog')
VlnPlot(Seroka_object, features = 'smog')
colnames(Seroka_object)
colnames(Seroka_object@meta.data)
VlnPlot(Seroka_object, features = 'smog', group.by = 'cell_type')
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(Seurat)
library(Seurat)
library(viridis)
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
DimPlot(Seroka_object)
FeaturePlot(Seroka_object, features = 'pip')
VlnPlot(Seroka_object, features = 'pip')
Seroka_object@meta.data$sg_ct = NA
Seroka_object@meta.data[Seroka_object@meta.data$seurat_clusters == '52', 'sg_ct'] = 'sg_1'
Seroka_object@meta.data$sg_ct = 'other'
Seroka_object@meta.data[Seroka_object@meta.data$seurat_clusters == '52', 'sg_ct'] = 'sg_1'
Seroka_object@meta.data[Seroka_object@meta.data$seurat_clusters == '60', 'sg_ct'] = 'sg_2'
DimPlot(Seroka_object, group.by = 'sg_ct')
VlnPlot(Seroka_object, features = 'sg_ct')
VlnPlot(Seroka_object, features = 'pip', group.by = 'sg_ct')
markers = SeuratWrappers::RunPresto(Seroka_object, ident.1 = 'sg_1', logfc.threshold = 0, min.pct = 0.1, group.by = 'sg_ct')
TARGET_dir = file.path("results", ANALYSIS_VERSION, "seroka_sg_genes")
dir.create(TARGET_dir)
write.csv(markers, file = file.path(TARGET_dir, 'sg_1_marker.csv'))
markers = SeuratWrappers::RunPresto(Seroka_object, ident.1 = 'sg_2', logfc.threshold = 0, min.pct = 0.1, group.by = 'sg_ct')
write.csv(markers, file = file.path(TARGET_dir, 'sg_2_marker.csv'))
FeaturePlot(Seroka_object, features = 'pip')
ggsave(file.path(TARGET_dir, 'pip_expression.png'))
DimPlot(Seroka_object, group.by = 'sg_ct')
ggsave(file.path(TARGET_dir, 'new_labels.png'))
DimPlot(Seroka_object, group.by = 'stage')
View(Seroka_object)
Seroka_object@meta.data
colnames(Seroka_object@meta.data)
DimPlot(Seroka_object, group.by = 'dataset')
