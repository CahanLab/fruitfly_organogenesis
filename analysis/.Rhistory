renv::deactivate()
library(Seurat)
packageVersion('Seurat')
library(monocle3)
source("R/set_up_environment.R")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
source("R/set_up_environment.R")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(dplyr)
devtools::install_github("nicolash2/ggdendroplot")
source("R/set_up_environment.R")
sessionInfo()
renv::snapshot()
ls
renv::init()
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
sessionINfo
sessionInfo
sessionInfo()
renv::activate()
library(Seurat)
packageVersion(Seurat)
packageVersion('Seurat')
?install.packages()
remotes::install_version("Seurat", version = "4.3.0")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
library(Seurat)
packageVersion('Seurat')
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
library(Seurat)
packageVersion('Seurat')
SAMPLE = "all"
source("R/set_up_environment.R")
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
packageVersion('monocle3')
packageVersion('harmony')
packageVersion('presto')
renv::snapshot()
renv::snapshot()
library(monocle3)
package_version(monocle3)
package_version('monocle3')
package.version('monocle3')
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
?ccf
# To reproduce our work, run this script.
# We used MacOS 13.3.1 (a) with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(rlang)
packageVersion('rlang')
# Set up working environment
library("Seurat")
library("dplyr")
library("magrittr")
library("Matrix")
library("stringr")
library("harmony")
library("RColorBrewer")
library("ggdendroplot")
library("viridis")
library("fgsea")
library("pheatmap")
library("enrichR")
install.packages("rlang", version="1.1.0")
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
# wildtype rep 3 is presented as wildtype stage 13-16 rep 2 in the manuscript
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
renv::snapshot()
# Load in files -----------------------------------------------------------
# this section of code is there to load in all the appropriate files needed to make plots
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_trachea')
rank_sum = read.csv(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "rank_sum_test.csv"), row.names = 1)
rank_sum = rank_sum[rank_sum$logFC > 0, ]
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "monocle3_no_batch_correct_object.rds"))
UMAP_coord = cds@int_colData$reducedDims$UMAP
colnames(UMAP_coord) = c("UMAP_1", "UMAP_2")
UMAP_coord = as.data.frame(UMAP_coord)
UMAP_coord$clusters = as.vector(monocle3::clusters(cds))
UMAP_coord$pseudotime = as.vector(monocle3::pseudotime(cds))
UMAP_coord$batch = as.vector(cds@colData$batch)
UMAP_coord[UMAP_coord$batch == 'early_rep_1', 'batch'] = 'Stage 10-12 rep 1'
UMAP_coord[UMAP_coord$batch == 'early_rep_2', 'batch'] = 'Stage 10-12 rep 2'
UMAP_coord[UMAP_coord$batch == 'late_rep_1', 'batch'] = 'Stage 13-16 rep 1'
UMAP_coord[UMAP_coord$batch == 'late_rep_3', 'batch'] = 'Stage 13-16 rep 2'
UMAP_coord$cell_type = cds@colData$cell_type
UMAP_coord[UMAP_coord$cell_type == 'Branching Trachea Cells', 'cell_type'] = 'Tracheal Tip Cells'
UMAP_coord[UMAP_coord$cell_type == 'Late Trachea Cells', 'cell_type'] = 'Late Tracheal Cells'
UMAP_coord[UMAP_coord$cell_type == 'Middle Trachea Cells', 'cell_type'] = 'Interm. Tracheal Cells'
UMAP_coord[UMAP_coord$cell_type == 'Early Trachea Cells', 'cell_type'] = 'Early Tracheal Cells'
# calculate cross correlation  --------------------------------------------
convert_line_plot <- function(scaled_exp) {
plot_df = data.frame()
for(gene in rownames(scaled_exp)) {
temp_plot = data.frame(pseudotime = seq(1, ncol(scaled_exp)),
scaled_exp = scaled_exp[gene, ],
gene = gene)
plot_df = rbind(plot_df, temp_plot)
}
plot_df$pseudotime = plot_df$pseudotime / max(plot_df$pseudotime)
return(plot_df)
}
plot_heatmap <- function(cds, target_genes, bandwidth = 3) {
norm_exp = monocle3::normalized_counts(cds)
norm_exp = as.matrix(norm_exp)
norm_exp = norm_exp[c(target_genes), ]
pt = monocle3::pseudotime(cds)
pt = data.frame(pseudotime = pt)
plot_df = cbind(pt, t(norm_exp[, rownames(pt)]))
smoothed_df = data.frame()
for(gene in colnames(plot_df)) {
if(gene == 'pseudotime') {
next
}
else {
yy = ksmooth(plot_df[, 'pseudotime'], plot_df[, gene], kernel="normal", bandwidth = bandwidth, x.points=plot_df[, 'pseudotime'])
if(nrow(smoothed_df) == 0) {
smoothed_df = data.frame('pseudotime' = yy$x)
}
smoothed_df[, gene] = yy$y
}
}
smoothed_df$pseudotime = NULL
smoothed_df = t(smoothed_df)
scaled_exp = t(scale(t(smoothed_df)))
sorted_genes = names(sort(apply(scaled_exp, MARGIN = 1, FUN = which.max)))
scaled_exp = scaled_exp[sorted_genes, ]
return(scaled_exp)
}
average_geneset <- function(scaled_exp) {
plot_df = data.frame(pseudotime = seq(1, ncol(scaled_exp)),
scaled_exp =   apply(scaled_exp, MARGIN = 2, FUN = mean))
plot_df$pseudotime = (plot_df$pseudotime - min(plot_df$pseudotime)) / max(plot_df$pseudotime)
return(plot_df)
}
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "monocle3_no_batch_correct_object.rds"))
cds = cds[, monocle3::clusters(cds) != 9] # remove the branch from the main trajectory
GSEA_results = read.csv(file.path(TARGET_dir, "sig_middle_GSEA_results.csv"), row.names = 1)
term = 'regulation of tube size, open tracheal system (GO:0035151)'
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
norm_exp_1 = plot_heatmap(cds, target_genes)
plot_norm_1 = average_geneset(norm_exp_1)
plot_norm_1$geneset = 'regulation of tube size (average expression)'
term = 'Golgi vesicle transport (GO:0048193)'
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
norm_exp_2 = plot_heatmap(cds, target_genes)
plot_norm_2 = average_geneset(norm_exp_2)
plot_norm_2$geneset = 'Golgi vesicle transport (average expression)'
x = ccf(plot_norm_2$scaled_exp, plot_norm_1$scaled_exp)
names(correlation) = x$lag[, 1, 1]
correlation = x$acf[, 1, 1]
correlation
names(correlation) = x$lag[, 1, 1]
max_correlation = correlation[which.max(correlation)]
max_correlation
p<-ggplot(plot_df, aes(x=pseudotime, y=scaled_exp, group=geneset, color = geneset)) +
xlab("pseudotime") +
ylab("average expression") +
ggtitle(paste0('Golg vesicle transport vs regulation of tube size')) +
geom_line() +
theme_bw() +
scale_color_brewer(palette='Set2') +
annotate("text", x=0.8, y=1, label= paste0("cross-correlation: ", round(as.numeric(max_correlation), digits = 3),  "\n lag: ", round(as.numeric(names(max_correlation)) / nrow(plot_norm_1), digits = 3))) +
guides(color=guide_legend(title="")) +
theme(text = element_text(size = 18))
plot_df = rbind(plot_norm_1, plot_norm_2)
plot_df$geneset = stringr::str_replace_all(plot_df$geneset, "\\(", "\n\\(\\")
p<-ggplot(plot_df, aes(x=pseudotime, y=scaled_exp, group=geneset, color = geneset)) +
xlab("pseudotime") +
ylab("average expression") +
ggtitle(paste0('Golg vesicle transport vs regulation of tube size')) +
geom_line() +
theme_bw() +
scale_color_brewer(palette='Set2') +
annotate("text", x=0.8, y=1, label= paste0("cross-correlation: ", round(as.numeric(max_correlation), digits = 3),  "\n lag: ", round(as.numeric(names(max_correlation)) / nrow(plot_norm_1), digits = 3))) +
guides(color=guide_legend(title="")) +
theme(text = element_text(size = 18))
p
# look at correlation between chitin and tube size
term = 'chitin-based cuticle development (GO:0040003)'
target_genes = GSEA_results[GSEA_results$pathway == term, 'leadingEdge']
target_genes = eval(parse(text = target_genes))
norm_exp_2 = plot_heatmap(cds, target_genes)
plot_norm_2 = average_geneset(norm_exp_2)
plot_norm_2$geneset = 'chitin-based cuticle (average expression)'
x = ccf(plot_norm_2$scaled_exp, plot_norm_1$scaled_exp)
correlation = x$acf[, 1, 1]
names(correlation) = x$lag[, 1, 1]
max_correlation = correlation[which.max(correlation)]
plot_df = rbind(plot_norm_1, plot_norm_2)
plot_df$geneset = stringr::str_replace_all(plot_df$geneset, "\\(", "\n\\(\\")
p<-ggplot(plot_df, aes(x=pseudotime, y=scaled_exp, group=geneset, color = geneset)) +
xlab("pseudotime") +
ylab("average expression") +
ggtitle(paste0('chitin-based cuticle vs regulation of tube size')) +
geom_line() +
theme_bw() +
scale_color_brewer(palette='Set2') +
annotate("text", x=0.8, y=1, label= paste0("cross-correlation: ", round(as.numeric(max_correlation), digits = 3),  "\n lag: ", round(as.numeric(names(max_correlation)) / nrow(plot_norm_1), digits = 3))) +
guides(color=guide_legend(title="")) +
theme(text = element_text(size = 18))
p
