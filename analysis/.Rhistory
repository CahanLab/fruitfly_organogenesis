View(gsea_results)
##### make Table 4 #####
run_file_list = list()
run_file_list[['Early_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "early_gsea_results.csv")
run_file_list[['Late_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "late_gsea_results.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]])
gsea_results$X = NULL
table_list[[temp_name]] = gsea_results
}
##### make Table 4 #####
run_file_list = list()
run_file_list[['Early_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "early_gsea_results.csv")
run_file_list[['Late_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "late_gsea_results.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]])
gsea_results$X = NULL
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_4.xlsx"))
##### plot out the SG, trachea and GC #####
run_file_list = list()
run_file_list[['Stage13-16_SG']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage13-16_Tr']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage13-16_GC']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Germ Cells/gsea_results_wt.csv")
run_file_list[['Stage10-12_SG']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage10-12_Tr']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage10-12_GC']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Germ Cells/gsea_results_wt.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]], row.names = 1)
table_list[[temp_name]] = gsea_results
}
##### plot out the SG, trachea and GC #####
run_file_list = list()
run_file_list[['Stage13-16_SG']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage13-16_Tr']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage13-16_GC']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Germ Cells/gsea_results_wt.csv")
run_file_list[['Stage10-12_SG']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage10-12_Tr']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage10-12_GC']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Germ Cells/gsea_results_wt.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]], row.names = 1)
gsea_results = gsea_results[gsea_results$NES > 0, ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_3.xlsx"))
gsea_results
gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
##### plot out the SG, trachea and GC #####
run_file_list = list()
run_file_list[['Stage13-16_SG']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage13-16_Tr']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage13-16_GC']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Germ Cells/gsea_results_wt.csv")
run_file_list[['Stage10-12_SG']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage10-12_Tr']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage10-12_GC']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Germ Cells/gsea_results_wt.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]], row.names = 1)
gsea_results = gsea_results[gsea_results$NES > 0, ]
gsea_results = gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_3.xlsx"))
##### make Table 4 #####
run_file_list = list()
run_file_list[['Early_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "early_gsea_results.csv")
run_file_list[['Late_SG']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_salivary_gland", "late_gsea_results.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]])
gsea_results$X = NULL
gsea_results = gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_4.xlsx"))
##### make Table 5 #####
run_file_list = list()
run_file_list[['Tip_Tr']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "Branching Trachea Cells_gsea_results.csv")
run_file_list[['Early_Tr']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "Early Trachea Cells_gsea_results.csv")
run_file_list[['Interm_Tr']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "Middle Trachea Cells_gsea_results.csv")
run_file_list[['Late_Tr']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_trachea", "Late Trachea Cells_gsea_results.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]])
gsea_results$X = NULL
gsea_results = gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_5.xlsx"))
##### make Table 6 #####
run_file_list = list()
run_file_list[['Late_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "4_gsea_results.csv")
run_file_list[['Interm2_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "2_gsea_results.csv")
run_file_list[['Interm1_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "6_gsea_results.csv")
run_file_list[['Early_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "5_gsea_results.csv")
run_file_list[['Unknown1_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "1_gsea_results.csv")
run_file_list[['Unknown2_GC']] = file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ/cluster_process_GSEA", "3_gsea_results.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]])
gsea_results$X = NULL
gsea_results = gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_6.xlsx"))
##### make quality comparisons #####
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
median(Seroka_object$nCount_RNA)
median(Seroka_object$nFeature_RNA)
output_statistics <- function(seurat_object) {
return(c(median(seurat_object$nCount_RNA), median(seurat_object$nFeature_RNA)))
}
Calderon_object_10_12 = readRDS("accessory_data/continuum_drosophila_embryonic_development_RNA/processed_data/continuum_exploration/10-12_celltyped.rds")
output_statistics <- function(seurat_object) {
return(c(median(seurat_object$nCount_RNA), median(seurat_object$nFeature_RNA)))
}
output_statistics(Calderon_object_10_12)
output_statistics(Seroka_object)
Seroka_object = Seroka_object[, Seroka_object$dataset == 'stg12']
##### make quality comparisons #####
output_statistics <- function(seurat_object) {
return(c(median(seurat_object$nCount_RNA),
median(seurat_object$nFeature_RNA),
mean(seurat_object$nCount_RNA),
mean(seurat_object$nFeature_RNA)))
}
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
Seroka_object = Seroka_object[, Seroka_object$dataset == 'stg12']
Calderon_object_10_12 = readRDS("accessory_data/continuum_drosophila_embryonic_development_RNA/processed_data/continuum_exploration/10-12_celltyped.rds")
Calderon_object= readRDS("accessory_data/continuum_drosophila_embryonic_development_RNA/processed_data/continuum_exploration/10-12_celltyped.rds")
our_object = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
##### make quality comparisons #####
output_statistics <- function(seurat_object) {
return(c(median(seurat_object$nCount_RNA),
median(seurat_object$nFeature_RNA),
mean(seurat_object$nCount_RNA),
mean(seurat_object$nFeature_RNA)))
}
stats_df = data.frame(row.names = c('median_nCount', 'median_nFeature', 'mean_nCount', 'mean_nFeature'))
stats_df$Seroka_stg12 = output_statistics(Seroka_object)
stats_df$Calderon_stg10_12 = output_statistics(Calderon_object)
stats_df$This_data_stg10_12 = output_statistics(our_object)
View(stats_df)
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
Seroka_object = Seroka_object[, Seroka_object$dataset != 'stg12']
Calderon_object= readRDS("accessory_data/continuum_drosophila_embryonic_development_RNA/processed_data/continuum_exploration/14-16_celltyped.rds")
our_object = readRDS("results/v18/manual_annotation_wt13/manual_celltype_object4.rds")
stats_df$Seroka_stg14_16 = output_statistics(Seroka_object)
stats_df$Calderon_stg14_16 = output_statistics(Calderon_object)
stats_df$This_data_stg13_16 = output_statistics(our_object)
View(stats_df)
write.xlsx(stats_df, file = file.path(TARGET_dir, "Table_7.xlsx"))
View(marker_gene_tab)
View(stats_df)
write.csv(stats_df, file = file.path(TARGET_dir, "Table_7.csv"))
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(singleCellNet)
Seroka_object = readRDS("accessory_data/Doe_Drosophila_Embryo_Atlas/script/curated_embryo_Doe.rds")
table(Seroka_object$cell_type)
our_monocle = readRDS("results/v18/refined_wt_late_early_germ/monocle3_no_batch_correct_object.rds")
train_exp = our_monocle@assays$counts
our_monocle@assays$counts
View(our_monocle)
our_monocle@assays@data
our_monocle@assays@data$counts
train_exp = our_monocle@assays@data$counts
UMAP_coord = our_monocle@int_colData$reducedDims$UMAP
colnames(UMAP_coord) = c("UMAP_1", "UMAP_2")
UMAP_coord = as.data.frame(UMAP_coord)
UMAP_coord$clusters = as.vector(monocle3::clusters(our_monocle))
UMAP_coord$pseudotime = as.vector(monocle3::pseudotime(our_monocle))
UMAP_coord$batch = as.vector(our_monocle@colData$batch)
UMAP_coord[UMAP_coord$batch == 'early_rep_1', 'batch'] = 'Stage 10-12 rep 1'
UMAP_coord[UMAP_coord$batch == 'early_rep_2', 'batch'] = 'Stage 10-12 rep 2'
UMAP_coord[UMAP_coord$batch == 'late_rep_1', 'batch'] = 'Stage 13-16 rep 1'
UMAP_coord[UMAP_coord$batch == 'late_rep_3', 'batch'] = 'Stage 13-16 rep 2'
UMAP_coord$cell_type = UMAP_coord$clusters
UMAP_coord[UMAP_coord$clusters == '1', 'cell_type'] = 'Unknown 1'
UMAP_coord[UMAP_coord$clusters == '3', 'cell_type'] = 'Unknown 2'
UMAP_coord[UMAP_coord$clusters == '5', 'cell_type'] = 'Early Germ Cells'
UMAP_coord[UMAP_coord$clusters == '6', 'cell_type'] = 'Interm. Germ Cells 1'
UMAP_coord[UMAP_coord$clusters == '2', 'cell_type'] = 'Interm. Germ Cells 2'
UMAP_coord[UMAP_coord$clusters == '4', 'cell_type'] = 'Late Germ Cells'
train_st = UMAP_coord
View(train_st)
colnames(Seroka_object$cell_type)
table(Seroka_object$cell_type)
germ_Seroka_object = Seroka_object[Seroka_object$cell_type == 'germline cells', ]
germ_Seroka_object = Seroka_object[, Seroka_object$cell_type == 'germline cells']
query_exp = germ_Seroka_object@assays$RNA@counts
query_st = germ_Seroka_object@meta.data
set.seed(100) #can be any random seed number
colnames(train_st)
talble(train_st$cell_type)
table(train_st$cell_type)
stList = splitCommon(sampTab=train_st, ncells=100, dLevel="cell_type")
stTrain = stList[[1]]
expTrain = train_exp[,rownames(stTrain)]
i_genes = intersect(rownames(train_exp), rownames(query_exp))
expTrain = train_exp[i_genes,rownames(stTrain)]
stTrain
stTrain$barcode = rownames(stTrain)
system.time(class_info<-scn_train(stTrain = stTrain,
expTrain = expTrain,
nTopGenes = 10,
nRand = 70,
nTrees = 1000,
nTopGenePairs = 25, dLevel = "cell_type",
colName_samp = "barcode"))
View(stTrain)
system.time(class_info<-scn_train(stTrain = stTrain,
expTrain = expTrain,
nTopGenes = 15,
nRand = 70,
nTrees = 1000,
nTopGenePairs = 25, dLevel = "cell_type",
colName_samp = "barcode"))
expTrain
expTrain = as.matrix(expTrain)
system.time(class_info<-scn_train(stTrain = stTrain,
expTrain = expTrain,
nTopGenes = 15,
nRand = 70,
nTrees = 1000,
nTopGenePairs = 25, dLevel = "cell_type",
colName_samp = "barcode"))
system.time(class_info<-scn_train(stTrain = stTrain,
expTrain = expTrain,
nTopGenes = 15,
nRand = 70,
nTrees = 1000,
nTopGenePairs = 30, dLevel = "cell_type",
colName_samp = "barcode"))
TARGET_dir = file.path("results", ANALYSIS_VERSION, 'seroka_germ_classification')
dir.create(TARGET_dir, recursive = TRUE)
train_exp = train_exp[i_genes, ]
query_exp = query_exp[i_genes, ]
withr::with_dir(
file.path(TARGET_dir),
{
write(colnames(train_exp), file = "raw_train_colnames.txt")
write(rownames(train_exp), file = "raw_train_rownames.txt")
Matrix::writeMM(train_exp, "raw_train_exp.txt")
write.csv(train_st, file = 'raw_meta_tab.csv')
}
)
withr::with_dir(
file.path(TARGET_dir),
{
write(colnames(query_exp), file = file.path("raw_query_colnames.txt"))
write(rownames(query_exp), file = file.path("raw_query_rownames.txt"))
Matrix::writeMM(query_exp, file.path("raw_query_exp.txt"))
}
)
class_profile = read.csv("SCN_classification.csv")
class_profile = read.csv(file.path(TARGET_dir, "SCN_classification.csv"))
View(class_profile)
class_profile = read.csv(file.path(TARGET_dir, "SCN_classification.csv"), row.names = 1)
View(class_profile)
class_profile = class_profile[rownames(germ_Seroka_object), ]
germ_Seroka_object@meta.data$SCN_class = class_profile$SCN_class
View(class_profile)
class_profile = read.csv(file.path(TARGET_dir, "SCN_classification.csv"), row.names = 1)
class_profile = class_profile[colnames(germ_Seroka_object), ]
germ_Seroka_object@meta.data$SCN_class = class_profile$SCN_class
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
germ_Seroka_object@meta.data = cbind(germ_Seroka_object@meta.data, class_profile)
View(class_profile)
colnames(class_profile)
FeaturePlot(object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'ULate.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
germ_Seroka_object <- NormalizeData(germ_Seroka_object)
germ_Seroka_object <- FindVariableFeatures(germ_Seroka_object, selection.method = "vst", nfeatures = 2000)
germ_Seroka_object <- ScaleData(germ_Seroka_object)
germ_Seroka_object <- RunPCA(germ_Seroka_object, features = VariableFeatures(object = germ_Seroka_object))
germ_Seroka_object <- RunUMAP(germ_Seroka_object, dims = 1:10)
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
germ_Seroka_object = Seroka_object[, Seroka_object$cell_type == 'germline cells']
class_profile = read.csv(file.path(TARGET_dir, "SCN_classification.csv"), row.names = 1)
class_profile = class_profile[colnames(germ_Seroka_object), ]
germ_Seroka_object@meta.data = cbind(germ_Seroka_object@meta.data, class_profile)
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
germ_Seroka_object <- NormalizeData(germ_Seroka_object)
germ_Seroka_object <- FindVariableFeatures(germ_Seroka_object, selection.method = "vst", nfeatures = 2000)
germ_Seroka_object <- ScaleData(germ_Seroka_object)
germ_Seroka_object <- RunPCA(germ_Seroka_object, features = VariableFeatures(object = germ_Seroka_object))
germ_Seroka_object <- RunUMAP(germ_Seroka_object, dims = 1:10)
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
germ_Seroka_object = Seroka_object[, Seroka_object$cell_type == 'germline cells']
class_profile = read.csv(file.path(TARGET_dir, "SCN_classification.csv"), row.names = 1)
class_profile = class_profile[colnames(germ_Seroka_object), ]
germ_Seroka_object@meta.data = cbind(germ_Seroka_object@meta.data, class_profile)
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
ggsave(filename = file.path(TARGET_dir, "SCN_class.png"))
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
ggsave(filename = file.path(TARGET_dir, "unknown_1.png"))
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
ggsave(filename = file.path(TARGET_dir, "unknown_2.png"))
ggsave(filename = file.path(TARGET_dir, "late_germ.png"))
DimPlot(germ_Seroka_object, group.by = 'SCN_class')
ggsave(filename = file.path(TARGET_dir, "SCN_class.png"))
FeaturePlot(germ_Seroka_object, features = 'Unknown.1')
ggsave(filename = file.path(TARGET_dir, "unknown_1.png"))
FeaturePlot(germ_Seroka_object, features = 'Unknown.2')
ggsave(filename = file.path(TARGET_dir, "unknown_2.png"))
FeaturePlot(germ_Seroka_object, features = 'Late.Germ.Cells')
ggsave(filename = file.path(TARGET_dir, "late_germ.png"))
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.2')
ggsave(filename = file.path(TARGET_dir, "interm2_germ.png"))
FeaturePlot(germ_Seroka_object, features = 'Interm..Germ.Cells.1')
ggsave(filename = file.path(TARGET_dir, "interm1_germ.png"))
FeaturePlot(germ_Seroka_object, features = 'Early.Germ.Cells')
ggsave(filename = file.path(TARGET_dir, "early_germ.png"))
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(monocle3)
library(ggplot2)
library(RColorBrewer)
library(dbplyr)
library(ggsignif)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'refined_wt13_early12_germ')
cds = readRDS(file.path("results", ANALYSIS_VERSION, "refined_wt_late_early_germ", "monocle3_no_batch_correct_object.rds"))
##### test the sequencing depth #####
UMAP_coord = cds@int_colData$reducedDims$UMAP
colnames(UMAP_coord) = c("UMAP_1", "UMAP_2")
UMAP_coord = as.data.frame(UMAP_coord)
UMAP_coord$clusters = as.vector(monocle3::clusters(cds))
UMAP_coord$pseudotime = as.vector(monocle3::pseudotime(cds))
UMAP_coord$batch = as.vector(cds@colData$batch)
UMAP_coord[UMAP_coord$batch == 'early_rep_1', 'batch'] = 'Stage 10-12 rep 1'
UMAP_coord[UMAP_coord$batch == 'early_rep_2', 'batch'] = 'Stage 10-12 rep 2'
UMAP_coord[UMAP_coord$batch == 'late_rep_1', 'batch'] = 'Stage 13-16 rep 1'
UMAP_coord[UMAP_coord$batch == 'late_rep_3', 'batch'] = 'Stage 13-16 rep 2'
UMAP_coord$cell_type = UMAP_coord$clusters
UMAP_coord[UMAP_coord$clusters == '1', 'cell_type'] = 'Unknown 1'
UMAP_coord[UMAP_coord$clusters == '3', 'cell_type'] = 'Unknown 2'
UMAP_coord[UMAP_coord$clusters == '5', 'cell_type'] = 'Early Germ Cells'
UMAP_coord[UMAP_coord$clusters == '6', 'cell_type'] = 'Interm. Germ Cells 1'
UMAP_coord[UMAP_coord$clusters == '2', 'cell_type'] = 'Interm. Germ Cells 2'
UMAP_coord[UMAP_coord$clusters == '4', 'cell_type'] = 'Late Germ Cells'
UMAP_coord$clusters <- factor(UMAP_coord$clusters, levels = c("Early Germ Cells",
"Interm. Germ Cells 1",
"Interm. Germ Cells 2",
"Late Germ Cells",
"Unknown 1",
"Unknown 2"))
UMAP_coord$log10_ngenes = log(cds@colData$nCount_RNA)
UMAP_coord$ngenes = cds@colData$nCount_RNA
p = ggplot(UMAP_coord, aes(x=reorder(cell_type, -log10_ngenes), y=log10_ngenes, fill = cell_type)) +
geom_violin() +
guides(fill=guide_legend(title="")) +
geom_boxplot(width=0.1) +
theme_minimal() +
scale_fill_brewer(palette = 'Set2') +
ylab("log10(UMI Counts)") +
xlab("cell type") +
theme(text = element_text(size = 18), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
geom_signif(comparisons = list(c("Unknown 2", "Late Germ Cells"),
c("Unknown 2", "Interm. Germ Cells 1"),
c("Unknown 2", "Interm. Germ Cells 2"),
c('Late Germ Cells', 'Unknown 1'),
c('Interm. Germ Cells 1', 'Unknown 1'),
c('Interm. Germ Cells 2', 'Unknown 1'),
c('Unknown 1', 'Early Germ Cells'),
c('Unknown 2', 'Early Germ Cells')), map_signif_level=TRUE, step_increase = 0.075)
p = ggplot(UMAP_coord, aes(x=reorder(cell_type, -log10_ngenes), y=log10_ngenes, fill = cell_type)) +
geom_violin() +
guides(fill=guide_legend(title="")) +
geom_boxplot(width=0.1) +
theme_minimal() +
scale_fill_brewer(palette = 'Set2') +
ylab("log(UMI Counts)") +
xlab("cell type") +
theme(text = element_text(size = 18), axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
geom_signif(comparisons = list(c("Unknown 2", "Late Germ Cells"),
c("Unknown 2", "Interm. Germ Cells 1"),
c("Unknown 2", "Interm. Germ Cells 2"),
c('Late Germ Cells', 'Unknown 1'),
c('Interm. Germ Cells 1', 'Unknown 1'),
c('Interm. Germ Cells 2', 'Unknown 1'),
c('Unknown 1', 'Early Germ Cells'),
c('Unknown 2', 'Early Germ Cells')), map_signif_level=TRUE, step_increase = 0.075)
ggsave(filename = file.path(TARGET_dir, 'read_depth.png'), plot = p, width = 10, height = 5)
# To reproduce our work, run this script.
# We used Ubuntu 20.04 with an R package environment managed by renv.
# We used R version 4.1.2.
# Make it work on each of our computers
try({setwd("~/Dropbox/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("~/Dropbox (CahanLab)/fruitfly_organogenesis/analysis")}, silent = T)
try({setwd("c:/Users/DAndrewLab/Desktop/fruitfly_organogenesis/analysis/")}, silent = T)
renv::activate()
ANALYSIS_VERSION = "v18" # Where to put output
metadata = read.table(header = T, text=
"sample cellranger
wt_rep1 2021-10-27_scRNA_10x_3prime
wt_rep3 2022-08-11_scRNA_10x_3prime_CellRanger6.1.2
wt_early_rep1 2022-12-07_scRNA_10x_3prime_WT_early
wt_early_rep2 2022-12-13_scRNA_10x_3prime_WT_early2")
SAMPLE = "all"
source("R/set_up_environment.R")
library(openxlsx)
TARGET_dir = file.path("results", ANALYSIS_VERSION, "figure_plots", 'supplementary_tabs')
dir.create(TARGET_dir, recursive = TRUE)
##### make the marker genes with the corresponding cell types #####
marker_gene_list = list()
marker_gene_tab = read.csv("results/v18/wt13_integrated/marker_genes.csv")
marker_gene_tab$X = NULL
marker_gene_tab$cell_types = NA
seurat_object = readRDS("results/v18/manual_annotation_wt13/manual_celltype_object4.rds")
seurat_meta = seurat_object@meta.data
for(temp_cluster in unique(marker_gene_tab$cluster)) {
marker_gene_tab[marker_gene_tab$cluster == temp_cluster, 'cell_types'] = unique(seurat_meta[seurat_meta$seurat_clusters == temp_cluster, "manual_celltypes"])
}
marker_gene_list[['stage 13-16']] = marker_gene_tab
# write in the stage 10-12
marker_gene_tab = read.csv("results/v18/early_wt12_integrated/marker_genes.csv")
marker_gene_tab$X = NULL
marker_gene_tab$cell_types = NA
seurat_object = readRDS("results/v18/manual_annotation_early_wt12/manual_celltype_object1.rds")
seurat_meta = seurat_object@meta.data
for(temp_cluster in unique(marker_gene_tab$cluster)) {
marker_gene_tab[marker_gene_tab$cluster == temp_cluster, 'cell_types'] = unique(seurat_meta[seurat_meta$seurat_clusters == temp_cluster, "manual_celltypes"])
}
marker_gene_list[['stage 10-12']] = marker_gene_tab
write.xlsx(marker_gene_list, file = file.path(TARGET_dir, "Table_2.xlsx"))
##### plot out the SG, trachea and GC #####
run_file_list = list()
run_file_list[['Stage13-16_SG']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage13-16_Tr']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage13-16_GC']] = file.path("results", ANALYSIS_VERSION, "wt13_enrichment/Germ Cells/gsea_results_wt.csv")
run_file_list[['Stage10-12_SG']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Salivary Gland/gsea_results_wt.csv")
run_file_list[['Stage10-12_Tr']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Trachea/gsea_results_wt.csv")
run_file_list[['Stage10-12_GC']] = file.path("results", ANALYSIS_VERSION, "early_wt12_enrichment/Germ Cells/gsea_results_wt.csv")
table_list = list()
for(temp_name in names(run_file_list)) {
gsea_results = read.csv(run_file_list[[temp_name]], row.names = 1)
gsea_results = gsea_results[order(gsea_results$NES, decreasing = TRUE), ]
table_list[[temp_name]] = gsea_results
}
write.xlsx(table_list, file = file.path(TARGET_dir, "Table_3.xlsx"))
library(ggplot2)
